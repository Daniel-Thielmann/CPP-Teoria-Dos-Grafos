{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment Trabalho 1 - Documenta\'E7\'E3o }Trabalho 1 - Documenta\'E7\'E3o}
{\comment Gerado por doxygen 1.13.1.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Trabalho 1 - Documenta\'E7\'E3o}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o \par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice da hierarquia\par \pard\plain 
{\tc \v \'CDndice da hierarquia}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hierarquia de classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta lista de heran\'E7as est\'E1 organizada, dentro do poss\'EDvel, por ordem alfab\'E9tica:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Aresta\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Grafo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
GrafoBipartido\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GrafoConexo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GrafoGrau\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
grafo_matriz\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
GrafoLista\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ListaA\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ListaV\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NoA\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NoV\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PossuiPonte\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Vertice\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos componentes\par \pard\plain 
{\tc \v \'CDndice dos componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de componentes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de classes, estruturas, uni\'F5es e interfaces com uma breve descri\'E7\'E3o:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Aresta} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Grafo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b grafo_matriz} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GrafoBipartido} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GrafoConexo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GrafoGrau} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GrafoLista} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaA} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaV} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NoA} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NoV} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PossuiPonte} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Vertice} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos ficheiros\par \pard\plain 
{\tc \v \'CDndice dos ficheiros}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de ficheiros\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de todos os ficheiros com uma breve descri\'E7\'E3o:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b CPP-Teoria-Dos-Grafos/{\b Carrega_Arquivo.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/{\b Carrega_Arquivo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/{\b Possui_articulacao.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/{\b Possui_articulacao.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/{\b Possui_Ponte.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/{\b Possui_Ponte.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/core/{\b Grafo.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/core/{\b Grafo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b aresta.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b aresta_ponderada.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b aresta_ponderada.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b eh_arvore.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b eh_arvore.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b eh_bipartido.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b eh_bipartido.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b eh_completo.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b eh_completo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b eh_direcionado.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b eh_direcionado.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b get_grau.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b get_grau.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b get_ordem.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b get_ordem.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b grafo_lista.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b grafo_lista.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b grafo_matriz.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b grafo_matriz.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b listaA.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b listaA.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b listaV.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b listaV.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b n_conexo.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b n_conexo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b noA.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b noV.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b vertice.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b vertice_ponderado.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/src/implementations/{\b vertice_ponderado.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/tests/{\b teste_eh_bipartido.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/tests/{\b teste_eh_bipartido.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/tests/{\b teste_get_grau.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/tests/{\b teste_get_grau.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/tests/{\b teste_n_conexo.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/tests/{\b teste_n_conexo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/tests/{\b teste_todos.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/tests/{\b testeGrafoLista.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CPP-Teoria-Dos-Grafos/tests/{\b testeLista.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documenta\'E7\'E3o da classe{\tc \v Documenta\'E7\'E3o da classe}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe Aresta\par \pard\plain 
{\tc\tcl2 \v Aresta}
{\xe \v Aresta}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
{
{\f2 #include <Carrega_Arquivo.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Aresta} (int {\b id}, int {\b peso}=0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b origem}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b destino}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b peso}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b acessada}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v Aresta\:Aresta}
{\xe \v Aresta\:Aresta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Aresta::Aresta (int id, int peso = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11         : id({\cf18 id}), peso(peso), acessada({\cf17 false}) \{\} {\cf20 // Inicializa os atributos}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v acessada\:Aresta}
{\xe \v Aresta\:acessada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Aresta::acessada}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v destino\:Aresta}
{\xe \v Aresta\:destino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Aresta::destino}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v id\:Aresta}
{\xe \v Aresta\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Aresta::id}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v origem\:Aresta}
{\xe \v Aresta\:origem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Aresta::origem}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v peso\:Aresta}
{\xe \v Aresta\:peso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Aresta::peso}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/{\b Carrega_Arquivo.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b aresta.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe Grafo\par \pard\plain 
{\tc\tcl2 \v Grafo}
{\xe \v Grafo}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
{
{\f2 #include <Carrega_Arquivo.h>}}\par
Diagrama de heran\'E7as da classe Grafo{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_grafo.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int vertices)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionar_aresta} (int origem, int destino, int peso)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exibir_grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int V)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarAresta} (int v, int w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b possuiArticulacao} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int {\b numVertices}, bool {\b ponderadoVertices}, bool {\b ponderadosArestas}, bool {\b direcionado})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int {\b numVertices})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarAresta} (int origem, int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerAresta} (int origem, int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirGrafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getGrau} (int vertice)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehDirecionado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b verticePonderado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b arestaPonderada} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_ordem} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b imprime_grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehConexo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehArvore} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehCompleto} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int ** {\b getAdjacencias} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNumVertices} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_vertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Aresta} ** {\b adjacencias}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int ** {\b adjacencias}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numVertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ponderadoVertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ponderadosArestas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b direcionado}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v Grafo\:Grafo}
{\xe \v Grafo\:Grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Grafo::Grafo (int vertices)}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                          \{\par
5     num_vertices = vertices;\par
6     adjacencias = {\cf17 new} Aresta*[vertices]; {\cf20 // Aloca mem\'F3ria para as linhas da matriz}\par
7     {\cf19 for} ({\cf18 int} i = 0; i < vertices; ++i) \{\par
8         adjacencias[i] = {\cf17 new} Aresta[vertices]; {\cf20 // Aloca mem\'F3ria para as colunas de cada linha}\par
9     \}\par
10 \}\par
}
}
{\xe \v ~Grafo\:Grafo}
{\xe \v Grafo\:~Grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Grafo::~Grafo ()}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34               \{\par
35     {\cf19 for} ({\cf18 int} i = 0; i < num_vertices; ++i) \{\par
36         {\cf17 delete}[] adjacencias[i]; {\cf20 // Libera cada linha}\par
37     \}\par
38     {\cf17 delete}[] adjacencias; {\cf20 // Libera a matriz}\par
39 \}\par
}
}
{\xe \v Grafo\:Grafo}
{\xe \v Grafo\:Grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Grafo::Grafo (int V)}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Grafo\:Grafo}
{\xe \v Grafo\:~Grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Grafo::~Grafo ()}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Grafo\:Grafo}
{\xe \v Grafo\:Grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Grafo::Grafo (int numVertices, bool ponderadoVertices, bool ponderadosArestas, bool direcionado)}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                                                                               \{\par
6     this->numVertices = numVertices;\par
7     this->ponderadoVertices = ponderadoVertices;\par
8     this->ponderadosArestas = ponderadosArestas;\par
9     this->direcionado = direcionado;\par
10 \par
11     {\cf20 // Aloca\'E7\'E3o din\'E2mica da matriz de adjac\'EAncias}\par
12     adjacencias = {\cf17 new} {\cf18 int}*[numVertices];\par
13     {\cf19 for} ({\cf18 int} i = 0; i < numVertices; ++i) \{\par
14         adjacencias[i] = {\cf17 new} {\cf18 int}[numVertices]();\par
15     \}\par
16 \}\par
}
}
{\xe \v Grafo\:Grafo}
{\xe \v Grafo\:Grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Grafo::Grafo (int numVertices)}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Grafo\:Grafo}
{\xe \v Grafo\:~Grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual Grafo::~Grafo (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionar_aresta\:Grafo}
{\xe \v Grafo\:adicionar_aresta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grafo::adicionar_aresta (int origem, int destino, int peso)}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                                               \{\par
14     adjacencias[origem][destino].origem = origem;\par
15     adjacencias[origem][destino].destino = destino;\par
16     adjacencias[origem][destino].peso = peso;\par
17 \}\par
}
}
{\xe \v adicionarAresta\:Grafo}
{\xe \v Grafo\:adicionarAresta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grafo::adicionarAresta (int origem, int destino)}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v adicionarAresta\:Grafo}
{\xe \v Grafo\:adicionarAresta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grafo::adicionarAresta (int v, int w)}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                         \{\par
25     adj[v][w] = 1; {\cf20 // Marca a aresta (v, w)}\par
26     adj[w][v] = 1; {\cf20 // Marca a aresta (w, v) para grafo n\'E3o direcionado}\par
27 \}\par
}
}
{\xe \v arestaPonderada\:Grafo}
{\xe \v Grafo\:arestaPonderada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Grafo::arestaPonderada ()}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 89 \{\par
90     {\cf19 return} ponderadosArestas;\par
91 \}\par
}
}
{\xe \v ehArvore\:Grafo}
{\xe \v Grafo\:ehArvore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool Grafo::ehArvore (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado em {\b grafo_matriz} ({\i p. {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ehCompleto\:Grafo}
{\xe \v Grafo\:ehCompleto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool Grafo::ehCompleto (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado em {\b grafo_matriz} ({\i p. {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ehConexo\:Grafo}
{\xe \v Grafo\:ehConexo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool Grafo::ehConexo (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado em {\b grafo_matriz} ({\i p. {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ehDirecionado\:Grafo}
{\xe \v Grafo\:ehDirecionado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Grafo::ehDirecionado ()}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 77 \{\par
78     {\cf19 return} direcionado;\par
79 \}\par
}
}
{\xe \v exibir_grafo\:Grafo}
{\xe \v Grafo\:exibir_grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grafo::exibir_grafo ()}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                          \{\par
21     {\cf19 for} ({\cf18 int} i = 0; i < num_vertices; ++i) \{\par
22         cout << {\cf22 "V\'E9rtice "} << i << {\cf22 ": "};\par
23         {\cf19 for} ({\cf18 int} j = 0; j < num_vertices; ++j) \{\par
24             {\cf19 if} (adjacencias[i][j].peso != 0) \{\par
25                 {\cf20 // Imprime a aresta se tiver peso diferente de zero (existe uma conex\'E3o)}\par
26                 cout << {\cf22 "("} << adjacencias[i][j].destino << {\cf22 ", peso: "} << adjacencias[i][j].peso << {\cf22 ") "};\par
27             \}\par
28         \}\par
29         cout << endl;\par
30     \}\par
31 \}\par
}
}
{\xe \v get_ordem\:Grafo}
{\xe \v Grafo\:get_ordem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grafo::get_ordem ()}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95 \{\par
96     {\cf19 return} numVertices;\par
97 \}\par
}
}
{\xe \v getAdjacencias\:Grafo}
{\xe \v Grafo\:getAdjacencias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ** Grafo::getAdjacencias () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34 \{ {\cf19 return} adjacencias; \}\par
}
}
{\xe \v getGrau\:Grafo}
{\xe \v Grafo\:getGrau}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grafo::getGrau (int vertice)}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                               \{\par
64     {\cf19 if} (vertice < 0 || vertice >= numVertices) {\cf19 return} -1;\par
65 \par
66     {\cf18 int} grau = 0;\par
67     {\cf19 for} ({\cf18 int} i = 0; i < numVertices; ++i) \{\par
68         {\cf19 if} (adjacencias[vertice][i] != 0) \{ {\cf20 // Verifica se h\'E1 aresta}\par
69             grau++;\par
70         \}\par
71     \}\par
72     {\cf19 return} grau;\par
73 \}\par
}
}
{\xe \v getNumVertices\:Grafo}
{\xe \v Grafo\:getNumVertices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grafo::getNumVertices () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35 \{ {\cf19 return} numVertices; \}\par
}
}
{\xe \v imprime_grafo\:Grafo}
{\xe \v Grafo\:imprime_grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Grafo::imprime_grafo (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado em {\b grafo_matriz} ({\i p. {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v imprimirGrafo\:Grafo}
{\xe \v Grafo\:imprimirGrafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grafo::imprimirGrafo ()}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                           \{\par
54     {\cf19 for} ({\cf18 int} i = 0; i < numVertices; ++i) \{\par
55         {\cf19 for} ({\cf18 int} j = 0; j < numVertices; ++j) \{\par
56             std::cout << adjacencias[i][j] << {\cf22 " "};\par
57         \}\par
58         std::cout << std::endl;\par
59     \}\par
60 \}\par
}
}
{\xe \v possuiArticulacao\:Grafo}
{\xe \v Grafo\:possuiArticulacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Grafo::possuiArticulacao ()}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 68                               \{\par
69     {\cf18 bool}* visitado = {\cf17 new} {\cf18 bool}[V](); {\cf20 // Marca os v\'E9rtices visitados}\par
70     {\cf18 int}* visit = {\cf17 new} {\cf18 int}[V];        {\cf20 // Armazena o tempo de descoberta de cada v\'E9rtice}\par
71     {\cf18 int}* low = {\cf17 new} {\cf18 int}[V];          {\cf20 // Armazena o menor tempo acess\'EDvel para cada v\'E9rtice}\par
72     {\cf18 int}* parent = {\cf17 new} {\cf18 int}[V];       {\cf20 // Armazena o pai de cada v\'E9rtice na DFS}\par
73 \par
74     fill_n(visit, V, -1);\par
75     fill_n(low, V, -1);\par
76     fill_n(parent, V, -1);\par
77 \par
78     {\cf20 // Itera por todos os v\'E9rtices para cobrir grafos desconexos}\par
79     {\cf19 for} ({\cf18 int} i = 0; i < V; i++) \{\par
80         {\cf19 if} (!visitado[i]) \{\par
81             {\cf19 if} (possuiArticulacaoUtil(i, visitado, visit, low, parent)) \{\par
82                 {\cf17 delete}[] visitado;\par
83                 {\cf17 delete}[] visit;\par
84                 {\cf17 delete}[] low;\par
85                 {\cf17 delete}[] parent;\par
86                 {\cf19 return} {\cf17 true}; {\cf20 // Retorna verdadeiro se encontrar algum v\'E9rtice de articula\'E7\'E3o}\par
87             \}\par
88         \}\par
89     \}\par
90 \par
91     {\cf17 delete}[] visitado;\par
92     {\cf17 delete}[] visit;\par
93     {\cf17 delete}[] low;\par
94     {\cf17 delete}[] parent;\par
95     {\cf19 return} {\cf17 false}; {\cf20 // N\'E3o encontrou v\'E9rtices de articula\'E7\'E3o}\par
96 \}\par
}
}
{\xe \v removerAresta\:Grafo}
{\xe \v Grafo\:removerAresta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grafo::removerAresta (int origem, int destino)}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45                                                  \{\par
46     {\cf19 if} (origem >= 0 && origem < numVertices && destino >= 0 && destino < numVertices) \{\par
47         adjacencias[origem][destino] = 0;\par
48         adjacencias[destino][origem] = 0;\par
49     \}\par
50 \}\par
}
}
{\xe \v verticePonderado\:Grafo}
{\xe \v Grafo\:verticePonderado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Grafo::verticePonderado ()}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 83 \{\par
84     {\cf19 return} ponderadoVertices;\par
85 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v adjacencias\:Grafo}
{\xe \v Grafo\:adjacencias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Aresta}** Grafo::adjacencias}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v adjacencias\:Grafo}
{\xe \v Grafo\:adjacencias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int** Grafo::adjacencias{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v direcionado\:Grafo}
{\xe \v Grafo\:direcionado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Grafo::direcionado{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v num_vertices\:Grafo}
{\xe \v Grafo\:num_vertices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grafo::num_vertices}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numVertices\:Grafo}
{\xe \v Grafo\:numVertices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grafo::numVertices{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ponderadosArestas\:Grafo}
{\xe \v Grafo\:ponderadosArestas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Grafo::ponderadosArestas{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ponderadoVertices\:Grafo}
{\xe \v Grafo\:ponderadoVertices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Grafo::ponderadoVertices{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/{\b Carrega_Arquivo.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/{\b Possui_articulacao.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/core/{\b Grafo.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/{\b Carrega_Arquivo.cpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/{\b Possui_articulacao.cpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/core/{\b Grafo.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe grafo_matriz\par \pard\plain 
{\tc\tcl2 \v grafo_matriz}
{\xe \v grafo_matriz}
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
\par
{
{\f2 #include <grafo_matriz.h>}}\par
Diagrama de heran\'E7as da classe grafo_matriz{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classgrafo__matriz.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b grafo_matriz} (int {\b numVertices}, bool {\b ponderadoVertices}, bool {\b ponderadosArestas}, bool {\b direcionado}, int pesoVerticesices[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~grafo_matriz} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adiciona_aresta} (int a, int b, int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprime_grafo} () override\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehConexo} () override\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dfsConexao} (int vertice, bool *verticeVerificado)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehArvore} () override\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b temCiclo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehCompleto} () override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int vertices)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionar_aresta} (int origem, int destino, int peso)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exibir_grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int V)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarAresta} (int v, int w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b possuiArticulacao} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int {\b numVertices}, bool {\b ponderadoVertices}, bool {\b ponderadosArestas}, bool {\b direcionado})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int {\b numVertices})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarAresta} (int origem, int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerAresta} (int origem, int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirGrafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getGrau} (int vertice)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehDirecionado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b verticePonderado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b arestaPonderada} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_ordem} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int ** {\b getAdjacencias} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNumVertices} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_vertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Aresta} ** {\b adjacencias}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int ** {\b adjacencias}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numVertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ponderadoVertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ponderadosArestas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b direcionado}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v grafo_matriz\:grafo_matriz}
{\xe \v grafo_matriz\:grafo_matriz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
grafo_matriz::grafo_matriz (int numVertices, bool ponderadoVertices, bool ponderadosArestas, bool direcionado, int pesoVerticesices[])}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                                                                                                                     : Grafo(numVertices, ponderadoVertices, ponderadosArestas, direcionado)\par
7 \{\par
8 \par
9     {\cf19 if} (direcionado == 1)  {\cf20 // caso grafo direcionado aloca uma matriz com o duplo ponteiro grafo e prenche com 0 para cada aresta por padr\'EF\'BF\'BDo}\par
10     \{\par
11         grafo = {\cf17 new} {\cf18 int}* [numVertices];\par
12         {\cf19 for} ({\cf18 int} i = 0; i < numVertices; i++)\par
13         \{\par
14             grafo[i] = {\cf17 new} {\cf18 int}[numVertices]();\par
15         \}\par
16 \par
17         {\cf19 for} ({\cf18 int} j = 0;j < numVertices; j++)\par
18         \{\par
19             {\cf19 for} ({\cf18 int} k = 0; k < numVertices; k++)\par
20             \{\par
21                 grafo[j][k] = 0;\par
22             \}\par
23         \}\par
24     \}\par
25     {\cf19 else}   {\cf20 // caso n\'EF\'BF\'BDo direcionado aloca uma array que representa uma matriz triangular com 0 para cada aresta por padr\'EF\'BF\'BDo}\par
26     \{\par
27 \par
28         {\cf18 int} x = tam_lista(numVertices);\par
29         grafo = {\cf17 new} {\cf18 int}* [1];\par
30         grafo[0] = {\cf17 new} {\cf18 int}[x];\par
31         {\cf19 for} ({\cf18 int} h = 0; h < x; h++)\par
32         \{\par
33             grafo[0][h] = 0;\par
34         \}\par
35     \}\par
36 \par
37 \par
38     {\cf19 if} (ponderadoVertices == 0)   {\cf20 // caso vertices n\'EF\'BF\'BDo ponderados todos possuem valor 1(pensei em deixar um array de 1 mas pra q?)}\par
39     \{\par
40         pesoVerticesices = {\cf17 new} int(1);\par
41     \}\par
42     {\cf19 else}     {\cf20 // caso vertices ponderados \'EF\'BF\'BD alocado um array com o valor de cada vertice}\par
43     \{\par
44         pesoVerticesices = {\cf17 new} {\cf18 int}[numVertices];\par
45         {\cf19 for} ({\cf18 int} k = 0; k < numVertices; k++)\par
46         \{\par
47             this->pesoVerticesices[k] = pesoVerticesices[k];\par
48         \}\par
49     \}\par
50 \}\par
}
}
{\xe \v ~grafo_matriz\:grafo_matriz}
{\xe \v grafo_matriz\:~grafo_matriz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
grafo_matriz::~grafo_matriz ()}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58 \{\par
59 \par
60     {\cf19 if} (direcionado == 1)    {\cf20 // caso grafo direcionado ir\'EF\'BF\'BD deletar uma matriz}\par
61     \{\par
62         {\cf19 for} ({\cf18 int} i = 0; i < numVertices; i++)\par
63         \{\par
64             {\cf17 delete}[] grafo[i];\par
65         \}\par
66         {\cf17 delete}[] grafo;\par
67     \}\par
68     {\cf19 else}     {\cf20 // caso grafo n\'EF\'BF\'BDo direcionado ir\'EF\'BF\'BD deletar uma array}\par
69     \{\par
70         {\cf17 delete}[] grafo[0];\par
71         {\cf17 delete}[] grafo;\par
72     \}\par
73 \par
74     {\cf17 delete}[] pesoVerticesices;\par
75 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adiciona_aresta\:grafo_matriz}
{\xe \v grafo_matriz\:adiciona_aresta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void grafo_matriz::adiciona_aresta (int a, int b, int c)}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 78 \{\par
79     {\cf19 if} (a != b)\par
80     \{\par
81         {\cf19 if} (direcionado == 1)\par
82         \{\par
83             {\cf19 if} (ponderadosArestas == 1)\par
84             \{\par
85                 grafo[a - 1][b - 1] = c;\par
86             \}\par
87             {\cf19 else}\par
88             \{\par
89                 grafo[a - 1][b - 1] = 1;\par
90             \}\par
91         \}\par
92         {\cf19 else}\par
93         \{\par
94 \par
95             {\cf19 if} (ponderadosArestas == 1)\par
96             \{\par
97                 {\cf19 if} (a < b)\par
98                 \{\par
99                     grafo[0][a + tam_lista(b - 1) - 1] = c;\par
100                 \}\par
101                 {\cf19 else}\par
102                 \{\par
103                     grafo[0][b + tam_lista(a - 1) - 1] = c;\par
104                 \}\par
105             \}\par
106 \par
107             {\cf19 else}\par
108             \{\par
109                 {\cf19 if} (a < b)\par
110                 \{\par
111                     grafo[0][a + tam_lista(b - 1) - 1] = 1;\par
112                 \}\par
113                 {\cf19 else}\par
114                 \{\par
115                     grafo[0][b + tam_lista(a - 1) - 1] = 1;\par
116                 \}\par
117             \}\par
118         \}\par
119     \}\par
120 \}\par
}
}
{\xe \v dfsConexao\:grafo_matriz}
{\xe \v grafo_matriz\:dfsConexao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void grafo_matriz::dfsConexao (int vertice, bool * verticeVerificado)}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 175                                                                   \{\par
176     verticeVerificado[vertice] = {\cf17 true};\par
177     {\cf19 if}(direcionado)\par
178     \{\par
179         {\cf19 for}({\cf18 int} i = 0; i < numVertices; i++)\par
180             {\cf19 if}((!verticeVerificado[i] && vertice != i && grafo[vertice][i] != 0))\par
181                 dfsConexao(i,verticeVerificado);\par
182     \}\par
183     {\cf19 else}\{\par
184         {\cf18 int} x = 0;\par
185         {\cf19 for} ({\cf18 int} i = 0; i < numVertices; i++)\{ \par
186             {\cf19 for} ({\cf18 int} j = 0; j < i; j++, x++)\{ \par
187                 {\cf19 if} ((i == vertice || j == vertice) && i != j) \{\par
188                     {\cf18 int} vizinho;\par
189                     {\cf19 if} (i == vertice)\par
190                         vizinho = j;\par
191                      {\cf19 else}\par
192                         vizinho = i;\par
193                     {\cf19 if} (!verticeVerificado[vizinho] && grafo[0][x] != 0)\par
194                         dfsConexao(vizinho, verticeVerificado);\par
195                 \}\par
196             \}\par
197         \}\par
198     \}\par
199     {\cf19 return};\par
200 \}\par
}
}
{\xe \v ehArvore\:grafo_matriz}
{\xe \v grafo_matriz\:ehArvore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool grafo_matriz::ehArvore (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado de {\b Grafo} ({\i p. {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 223 \{\par
224     {\cf18 int} numeroArestas = 0;\par
225     {\cf19 if}(!ehConexo())\par
226         {\cf19 return} {\cf17 false};\par
227     {\cf19 if}(direcionado)\{\par
228         {\cf19 for}({\cf18 int} i = 0; i < numVertices; i++)\par
229             {\cf19 for}({\cf18 int} j = 0; j < numVertices; j++)\par
230                 {\cf19 if}(j != i && grafo[i][j] != 0)\par
231                     numeroArestas++;\par
232     \}\par
233     {\cf19 else}\{\par
234         {\cf19 for}({\cf18 int} i = 0; i < tam_lista(numVertices); i++)\par
235             {\cf19 if}(grafo[0][i] != 0)\par
236                 numeroArestas++;\par
237     \}\par
238     {\cf19 if}(temCiclo())\par
239         {\cf19 return} {\cf17 false};\par
240     {\cf19 return} {\cf17 true};\par
241 \}\par
}
}
{\xe \v ehCompleto\:grafo_matriz}
{\xe \v grafo_matriz\:ehCompleto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool grafo_matriz::ehCompleto (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado de {\b Grafo} ({\i p. {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 204 \{\par
205     {\cf19 if}(direcionado)\{\par
206         {\cf19 for}({\cf18 int} i = 0; i < numVertices; i++)\par
207             {\cf19 for}({\cf18 int} j = 0; j < numVertices; j++)\{\par
208                 {\cf19 if}(i != j && grafo[i][j] == 0)\par
209                     {\cf19 return} {\cf17 false};\par
210         \}\par
211     \}\par
212     {\cf19 else}\{\par
213         {\cf18 int} x = tam_lista(numVertices);\par
214         {\cf19 for}({\cf18 int} i = 0; i < numVertices; i++)\par
215             {\cf19 if}(grafo[0][i] == 0)\par
216                 {\cf19 return} {\cf17 false};\par
217     \}\par
218     {\cf19 return} {\cf17 true};\par
219 \}\par
}
}
{\xe \v ehConexo\:grafo_matriz}
{\xe \v grafo_matriz\:ehConexo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool grafo_matriz::ehConexo (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado de {\b Grafo} ({\i p. {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 160 \{\par
161     {\cf19 if}(numVertices == 0)\par
162         {\cf19 return} {\cf17 true};\par
163     {\cf18 bool} * verticeVerificado;\par
164     verticeVerificado = {\cf17 new} {\cf18 bool}[numVertices];\par
165     {\cf19 for}({\cf18 int} i = 0; i < numVertices; i++)\par
166         verticeVerificado[i] = {\cf17 false};\par
167     dfsConexao(0, verticeVerificado);\par
168     {\cf19 for}({\cf18 int} i = 0; i < numVertices; i++)\par
169         {\cf19 if}(verticeVerificado[i] == {\cf17 false})\par
170             {\cf19 return} {\cf17 false};\par
171     {\cf19 return} {\cf17 true};\par
172 \}\par
}
}
{\xe \v imprime_grafo\:grafo_matriz}
{\xe \v grafo_matriz\:imprime_grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void grafo_matriz::imprime_grafo (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado de {\b Grafo} ({\i p. {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 123 \{\par
124     {\cf19 if} (direcionado == 1)\par
125     \{\par
126         {\cf19 for} ({\cf18 int} i = 0; i < numVertices; i++)\par
127         \{\par
128             {\cf19 for} ({\cf18 int} j = 0; j < numVertices; j++)\par
129             \{\par
130                 cout << grafo[i][j] << {\cf22 "  "};\par
131             \}\par
132             cout << endl;\par
133         \}\par
134 \par
135     \}\par
136     {\cf19 else}\par
137     \{\par
138         {\cf18 int} x = 0;\par
139         {\cf19 for} ({\cf18 int} i = 0; i < numVertices; i++)\par
140         \{\par
141             {\cf19 for} ({\cf18 int} j = 0; j < numVertices; j++)\par
142             \{\par
143                 {\cf19 if} (i >= j)\par
144                 \{\par
145                     cout << grafo[0][x] << {\cf22 "  "};\par
146                     x++;\par
147                 \}\par
148                 {\cf19 else}\par
149                     cout << {\cf22 "0  "};\par
150 \par
151             \}\par
152             cout << endl;\par
153         \}\par
154     \}\par
155 \}\par
}
}
{\xe \v temCiclo\:grafo_matriz}
{\xe \v grafo_matriz\:temCiclo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool grafo_matriz::temCiclo ()}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 245 \{\par
246 \par
247 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b grafo_matriz.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b grafo_matriz.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe GrafoBipartido\par \pard\plain 
{\tc\tcl2 \v GrafoBipartido}
{\xe \v GrafoBipartido}
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
\par
{
{\f2 #include <eh_bipartido.h>}}\par
Diagrama de heran\'E7as da classe GrafoBipartido{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_grafo_bipartido.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GrafoBipartido} (int {\b numVertices})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehBipartido} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int vertices)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionar_aresta} (int origem, int destino, int peso)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exibir_grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int V)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarAresta} (int v, int w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b possuiArticulacao} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int {\b numVertices}, bool {\b ponderadoVertices}, bool {\b ponderadosArestas}, bool {\b direcionado})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int {\b numVertices})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarAresta} (int origem, int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerAresta} (int origem, int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirGrafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getGrau} (int vertice)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehDirecionado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b verticePonderado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b arestaPonderada} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_ordem} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b imprime_grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehConexo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehArvore} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehCompleto} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int ** {\b getAdjacencias} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNumVertices} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_vertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Aresta} ** {\b adjacencias}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int ** {\b adjacencias}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numVertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ponderadoVertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ponderadosArestas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b direcionado}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v GrafoBipartido\:GrafoBipartido}
{\xe \v GrafoBipartido\:GrafoBipartido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GrafoBipartido::GrafoBipartido (int numVertices)}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4 : Grafo(numVertices) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v ehBipartido\:GrafoBipartido}
{\xe \v GrafoBipartido\:ehBipartido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool GrafoBipartido::ehBipartido ()}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                  \{\par
8     {\cf18 int} numVertices = getNumVertices();\par
9     {\cf18 int}** adjacencias = getAdjacencias();\par
10 \par
11     {\cf18 int}* cores = {\cf17 new} {\cf18 int}[numVertices];\par
12     {\cf19 for} ({\cf18 int} i = 0; i < numVertices; ++i) \{\par
13         cores[i] = -1; {\cf20 // Inicializa as cores como n\'E3o atribu\'EDdas}\par
14     \}\par
15 \par
16     {\cf18 bool} isBipartido = {\cf17 true};\par
17 \par
18     {\cf17 auto} bfs = [&]({\cf18 int} vertice) \{\par
19         {\cf18 int}* fila = {\cf17 new} {\cf18 int}[numVertices];\par
20         {\cf18 int} inicio = 0, fim = 0;\par
21 \par
22         fila[fim++] = vertice;\par
23         cores[vertice] = 0; {\cf20 // Primeira cor}\par
24 \par
25         {\cf19 while} (inicio < fim && isBipartido) \{\par
26             {\cf18 int} u = fila[inicio++];\par
27             {\cf19 for} ({\cf18 int} v = 0; v < numVertices; ++v) \{\par
28                 {\cf19 if} (adjacencias[u][v] != 0) \{ {\cf20 // Existe aresta}\par
29                     {\cf19 if} (cores[v] == -1) \{ {\cf20 // N\'E3o colorido}\par
30                         cores[v] = 1 - cores[u];\par
31                         fila[fim++] = v;\par
32                     \} {\cf19 else} {\cf19 if} (cores[v] == cores[u]) \{\par
33                         isBipartido = {\cf17 false};\par
34                     \}\par
35                 \}\par
36             \}\par
37         \}\par
38         {\cf17 delete}[] fila;\par
39     \};\par
40 \par
41     {\cf19 for} ({\cf18 int} i = 0; i < numVertices && isBipartido; ++i) \{\par
42         {\cf19 if} (cores[i] == -1) \{\par
43             bfs(i);\par
44         \}\par
45     \}\par
46 \par
47     {\cf17 delete}[] cores;\par
48     {\cf19 return} isBipartido;\par
49 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b eh_bipartido.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b eh_bipartido.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe GrafoConexo\par \pard\plain 
{\tc\tcl2 \v GrafoConexo}
{\xe \v GrafoConexo}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\par
{
{\f2 #include <n_conexo.h>}}\par
Diagrama de heran\'E7as da classe GrafoConexo{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_grafo_conexo.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GrafoConexo} (int {\b numVertices})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nConexo} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int vertices)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionar_aresta} (int origem, int destino, int peso)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exibir_grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int V)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarAresta} (int v, int w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b possuiArticulacao} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int {\b numVertices}, bool {\b ponderadoVertices}, bool {\b ponderadosArestas}, bool {\b direcionado})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int {\b numVertices})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarAresta} (int origem, int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerAresta} (int origem, int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirGrafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getGrau} (int vertice)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehDirecionado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b verticePonderado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b arestaPonderada} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_ordem} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b imprime_grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehConexo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehArvore} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehCompleto} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int ** {\b getAdjacencias} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNumVertices} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_vertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Aresta} ** {\b adjacencias}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int ** {\b adjacencias}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numVertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ponderadoVertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ponderadosArestas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b direcionado}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v GrafoConexo\:GrafoConexo}
{\xe \v GrafoConexo\:GrafoConexo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GrafoConexo::GrafoConexo (int numVertices)}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3 : Grafo(numVertices) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v nConexo\:GrafoConexo}
{\xe \v GrafoConexo\:nConexo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GrafoConexo::nConexo ()}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                          \{\par
6     {\cf18 int} numVertices = getNumVertices();  {\cf20 // Obt\'E9m o n\'FAmero de v\'E9rtices}\par
7     {\cf18 int}** adjacencias = getAdjacencias(); {\cf20 // Obt\'E9m a matriz de adjac\'EAncias}\par
8 \par
9     {\cf18 bool}* visitado = {\cf17 new} {\cf18 bool}[numVertices]; {\cf20 // Array para marcar v\'E9rtices visitados}\par
10     {\cf19 for} ({\cf18 int} i = 0; i < numVertices; ++i) \{\par
11         visitado[i] = {\cf17 false};\par
12     \}\par
13 \par
14     {\cf18 int} componentes = 0;\par
15 \par
16     {\cf20 // Fun\'E7\'E3o auxiliar para realizar BFS}\par
17     {\cf17 auto} bfs = [&]({\cf18 int} vertice) \{\par
18         {\cf18 int}* fila = {\cf17 new} {\cf18 int}[numVertices];\par
19         {\cf18 int} inicio = 0, fim = 0;\par
20 \par
21         fila[fim++] = vertice;\par
22         visitado[vertice] = {\cf17 true};\par
23 \par
24         {\cf19 while} (inicio < fim) \{\par
25             {\cf18 int} u = fila[inicio++];\par
26             {\cf19 for} ({\cf18 int} v = 0; v < numVertices; ++v) \{\par
27                 {\cf19 if} (adjacencias[u][v] != 0 && !visitado[v]) \{\par
28                     visitado[v] = {\cf17 true};\par
29                     fila[fim++] = v;\par
30                 \}\par
31             \}\par
32         \}\par
33         {\cf17 delete}[] fila;\par
34     \};\par
35 \par
36     {\cf20 // Itera sobre todos os v\'E9rtices para identificar componentes conexas}\par
37     {\cf19 for} ({\cf18 int} i = 0; i < numVertices; ++i) \{\par
38         {\cf19 if} (!visitado[i]) \{\par
39             bfs(i);\par
40             componentes++;\par
41         \}\par
42     \}\par
43 \par
44     {\cf17 delete}[] visitado;\par
45     {\cf19 return} componentes;\par
46 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b n_conexo.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b n_conexo.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe GrafoGrau\par \pard\plain 
{\tc\tcl2 \v GrafoGrau}
{\xe \v GrafoGrau}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\par
{
{\f2 #include <get_grau.h>}}\par
Diagrama de heran\'E7as da classe GrafoGrau{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_grafo_grau.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GrafoGrau} (int {\b numVertices})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getGrau} (int vertice)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int vertices)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionar_aresta} (int origem, int destino, int peso)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exibir_grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int V)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarAresta} (int v, int w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b possuiArticulacao} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int {\b numVertices}, bool {\b ponderadoVertices}, bool {\b ponderadosArestas}, bool {\b direcionado})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} (int {\b numVertices})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarAresta} (int origem, int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerAresta} (int origem, int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirGrafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getGrau} (int vertice)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehDirecionado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b verticePonderado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b arestaPonderada} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_ordem} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b imprime_grafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehConexo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehArvore} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b ehCompleto} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int ** {\b getAdjacencias} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNumVertices} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_vertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Aresta} ** {\b adjacencias}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Grafo}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int ** {\b adjacencias}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numVertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ponderadoVertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ponderadosArestas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b direcionado}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v GrafoGrau\:GrafoGrau}
{\xe \v GrafoGrau\:GrafoGrau}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GrafoGrau::GrafoGrau (int numVertices){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9 : Grafo(numVertices) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getGrau\:GrafoGrau}
{\xe \v GrafoGrau\:getGrau}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GrafoGrau::getGrau (int vertice)}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3                                   \{\par
4     {\cf18 int}** adjacencias = getAdjacencias(); {\cf20 // Obt\'E9m matriz de adjac\'EAncias}\par
5     {\cf18 int} numVertices = getNumVertices();  {\cf20 // Obt\'E9m n\'FAmero de v\'E9rtices}\par
6 \par
7     {\cf18 int} grau = 0;\par
8     {\cf19 for} ({\cf18 int} i = 0; i < numVertices; ++i) \{\par
9         {\cf19 if} (adjacencias[vertice][i] != 0) \{ {\cf20 // Verifica se h\'E1 aresta}\par
10             grau++;\par
11         \}\par
12     \}\par
13     {\cf19 return} grau; {\cf20 // Retorna o grau do v\'E9rtice}\par
14 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b get_grau.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b get_grau.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe GrafoLista\par \pard\plain 
{\tc\tcl2 \v GrafoLista}
{\xe \v GrafoLista}
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
\par
{
{\f2 #include <grafo_lista.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GrafoLista} (string nomeArquivo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~GrafoLista} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimeGrafo} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b arestasPonderadas} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b temCiclo} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehCompleto} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b ListaV} & {\b getVertices} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehConexo} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dfsConexao} ({\b Vertice} *vertice, bool *visitado) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b verificaCicloUtil} ({\b Vertice} *vertice, bool *visitado, bool *pilhaRecursao) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b verificaCicloNaoDirecionado} ({\b Vertice} *vertice, bool *visitado, int pai) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b temCicloNaoDirecionado} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehDirecionado} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b vertice_ponderado} () const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v GrafoLista\:GrafoLista}
{\xe \v GrafoLista\:GrafoLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GrafoLista::GrafoLista (string nomeArquivo)}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                          \{ \par
11     \par
12     this->direcionado = {\cf17 false}; {\cf20 // Inicializa como n\'E3o direcionado}\par
13     this->ponderadoVertices = {\cf17 false}; {\cf20 // Inicializa como n\'E3o ponderado}\par
14     this->ponderadoArestas = {\cf17 false}; {\cf20 // Inicializa como n\'E3o ponderado}\par
15    \par
16     std::ifstream arquivo(nomeArquivo);\par
17     {\cf19 if} (!arquivo.is_open()) \{  {\cf20 // Verifica se o arquivo foi aberto corretamente}\par
18         std::cerr << {\cf22 "Erro ao abrir o arquivo: "} << nomeArquivo << std::endl;\par
19         exit(1);\par
20     \}\par
21 \par
22     {\cf18 int} numVertices;\par
23     arquivo >> numVertices >> direcionado >> ponderadoVertices >> ponderadoArestas; {\cf20 // L\'EA o cabe\'E7alho do arquivo}\par
24 \par
25     {\cf20 // Adiciona os v\'E9rtices}\par
26     {\cf19 for} ({\cf18 int} i = 0; i < numVertices; ++i) \{       \par
27         {\cf18 int} peso = ponderadoVertices ? 0 : 1;     {\cf20 // Peso padr\'E3o \'E9 1}\par
28         {\cf19 if} (ponderadoVertices) \{  {\cf20 // Se os v\'E9rtices forem ponderados, leia o peso}\par
29             arquivo >> peso;\par
30         \}\par
31         adicionaVertice(i + 1, peso); {\cf20 // Adiciona v\'E9rtice com ID 1, 2, 3, ...}\par
32     \}\par
33 \par
34     {\cf20 // Adiciona as arestas}\par
35     {\cf18 int} origem, destino, peso;\par
36     {\cf19 while} (arquivo >> origem >> destino) \{\par
37         peso = ponderadoArestas ? 0 : 1; {\cf20 // Peso padr\'E3o \'E9 1}\par
38         {\cf19 if} (ponderadoArestas) \{ {\cf20 // Se as arestas forem ponderadas, leia o peso}\par
39             arquivo >> peso;\par
40         \}\par
41         adicionaAresta(origem, destino, peso); {\cf20 // Adiciona a aresta ao grafo}\par
42     \}\par
43 \par
44     arquivo.close();\par
45 \}\par
}
}
{\xe \v ~GrafoLista\:GrafoLista}
{\xe \v GrafoLista\:~GrafoLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GrafoLista::~GrafoLista ()}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 48                         \{\par
49     {\cf20 // A lista de v\'E9rtices possui um destrutor que libera os recursos}\par
50 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v arestasPonderadas\:GrafoLista}
{\xe \v GrafoLista\:arestasPonderadas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool GrafoLista::arestasPonderadas () const}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 124                                          \{\par
125     {\cf19 return} ponderadoArestas;\par
126 \}\par
}
}
{\xe \v dfsConexao\:GrafoLista}
{\xe \v GrafoLista\:dfsConexao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GrafoLista::dfsConexao ({\b Vertice} * vertice, bool * visitado) const}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 264                                                                   \{\par
265     {\cf18 int} {\cf18 id} = vertice->id - 1; {\cf20 // \'CDndice zero-based}\par
266     visitado[id] = {\cf17 true};\par
267 \par
268     {\cf20 // Percorre as arestas de sa\'EDda}\par
269     NoA* noAresta = vertice->arestas.getRaiz();\par
270     {\cf19 while} (noAresta) \{\par
271         {\cf18 int} destino = noAresta->a->id - 1; {\cf20 // \'CDndice zero-based}\par
272         {\cf19 if} (!visitado[destino]) \{\par
273             dfsConexao(vertices.encontraVertice(destino + 1), visitado);\par
274         \}\par
275         noAresta = noAresta->proximo;\par
276     \}\par
277 \par
278     {\cf20 // Percorre as arestas reversas (caso seja um grafo direcionado)}\par
279     NoV* noVertice = vertices.getRaiz();\par
280     {\cf19 while} (noVertice) \{\par
281         NoA* arestaReversa = noVertice->v->arestas.getRaiz();\par
282         {\cf19 while} (arestaReversa) \{\par
283             {\cf19 if} (arestaReversa->a->id == vertice->id && !visitado[noVertice->v->id - 1]) \{\par
284                 dfsConexao(noVertice->v, visitado);\par
285             \}\par
286             arestaReversa = arestaReversa->proximo;\par
287         \}\par
288         noVertice = noVertice->proximo;\par
289     \}\par
290 \}\par
}
}
{\xe \v ehCompleto\:GrafoLista}
{\xe \v GrafoLista\:ehCompleto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool GrafoLista::ehCompleto () const}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 227                                   \{ \par
228     {\cf18 int} numVertices = vertices.tamanho();\par
229     NoV* noVertice = vertices.getRaiz(); {\cf20 // Pega a raiz da lista de v\'E9rtices}\par
230     {\cf19 while} (noVertice) \{\par
231         {\cf19 if} (noVertice->v->arestas.tamanho() != numVertices - 1) \{ {\cf20 // Verifica se o v\'E9rtice tem o n\'FAmero correto de arestas}\par
232             {\cf19 return} {\cf17 false};\par
233         \}\par
234         noVertice = noVertice->proximo; {\cf20 // Move para o pr\'F3ximo v\'E9rtice}\par
235     \}\par
236     {\cf19 return} {\cf17 true};\par
237 \}\par
}
}
{\xe \v ehConexo\:GrafoLista}
{\xe \v GrafoLista\:ehConexo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool GrafoLista::ehConexo () const}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 244                                 \{\par
245     {\cf18 int} numVertices = vertices.tamanho();\par
246     {\cf19 if} (numVertices == 0) {\cf19 return} {\cf17 true}; {\cf20 // Grafo vazio \'E9 considerado conexo}\par
247 \par
248     {\cf18 bool}* visitado = {\cf17 new} {\cf18 bool}[numVertices]();\par
249     dfsConexao(vertices.encontraVertice(1), visitado); {\cf20 // Executa DFS ignorando dire\'E7\'F5es}\par
250 \par
251     {\cf20 // Verifica se todos os v\'E9rtices foram visitados}\par
252     {\cf19 for} ({\cf18 int} i = 0; i < numVertices; ++i) \{\par
253         {\cf19 if} (!visitado[i]) \{\par
254             {\cf17 delete}[] visitado;\par
255             {\cf19 return} {\cf17 false}; {\cf20 // Algum v\'E9rtice n\'E3o foi alcan\'E7ado; grafo n\'E3o \'E9 conexo}\par
256         \}\par
257     \}\par
258 \par
259     {\cf17 delete}[] visitado;\par
260     {\cf19 return} {\cf17 true}; {\cf20 // Todos os v\'E9rtices foram visitados; grafo \'E9 conexo}\par
261 \}\par
}
}
{\xe \v ehDirecionado\:GrafoLista}
{\xe \v GrafoLista\:ehDirecionado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool GrafoLista::ehDirecionado () const}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 222                                      \{ {\cf20 // Verifica se o grafo \'E9 direcionado}\par
223     {\cf19 return} direcionado; {\cf20 // Retorna o valor armazenado ao carregar o grafo}\par
224 \}\par
}
}
{\xe \v getVertices\:GrafoLista}
{\xe \v GrafoLista\:getVertices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b ListaV} & GrafoLista::getVertices () const}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 239                                             \{ {\cf20 // Retorna uma refer\'EAncia constante para os v\'E9rtices}\par
240     {\cf19 return} vertices; {\cf20 // vertices deve ser uma inst\'E2ncia de ListaV}\par
241 \}\par
}
}
{\xe \v imprimeGrafo\:GrafoLista}
{\xe \v GrafoLista\:imprimeGrafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GrafoLista::imprimeGrafo () const}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 98                                     \{\par
99     NoV* noVertice = vertices.getRaiz();  {\cf20 // Acessa a raiz da lista de v\'E9rtices}\par
100     {\cf19 while} (noVertice) \{  {\cf20 // Enquanto houver v\'E9rtices na lista}\par
101         Vertice* vertice = noVertice->v;  {\cf20 // Pega o v\'E9rtice atual}\par
102         cout << {\cf22 "V\'E9rtice "} << vertice->id << {\cf22 " (Peso: "} << vertice->peso << {\cf22 "): "};\par
103 \par
104         {\cf20 // Verifica se o v\'E9rtice tem arestas}\par
105         {\cf19 if} (vertice->arestas.getRaiz() == {\cf17 nullptr}) \{\par
106             cout << {\cf22 "(sem arestas)"} << endl;  {\cf20 // Caso o v\'E9rtice n\'E3o tenha arestas}\par
107         \} {\cf19 else} \{\par
108             {\cf20 // Itera sobre as arestas do v\'E9rtice}\par
109             NoA* noAresta = vertice->arestas.getRaiz();\par
110             {\cf19 while} (noAresta) \{\par
111                 cout << {\cf22 "-> "} << noAresta->a->id << {\cf22 " (Peso: "} << noAresta->a->peso << {\cf22 ") "};\par
112                 noAresta = noAresta->proximo;  {\cf20 // Move para a pr\'F3xima aresta}\par
113             \}\par
114             cout << endl;\par
115         \}\par
116 \par
117         noVertice = noVertice->proximo;  {\cf20 // Move para o pr\'F3ximo v\'E9rtice}\par
118     \}\par
119 \}\par
}
}
{\xe \v temCiclo\:GrafoLista}
{\xe \v GrafoLista\:temCiclo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool GrafoLista::temCiclo () const}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 129                                 \{ {\cf20 // Verifica se o grafo direcionado cont\'E9m ciclos}\par
130     {\cf18 int} numVertices = vertices.tamanho();\par
131     {\cf18 bool}* visitado = {\cf17 new} {\cf18 bool}[numVertices]();\par
132     {\cf18 bool}* pilhaRecursao = {\cf17 new} {\cf18 bool}[numVertices](); {\cf20 // Para rastrear a pilha de recurs\'E3o}\par
133 \par
134     {\cf19 for} ({\cf18 int} i = 0; i < numVertices; ++i) \{\par
135         {\cf19 if} (!visitado[i]) \{\par
136             {\cf20 // Verifica ciclos a partir de cada v\'E9rtice n\'E3o visitado}\par
137             Vertice* vertice = vertices.encontraVertice(i + 1);\par
138             {\cf19 if} (verificaCicloUtil(vertice, visitado, pilhaRecursao)) \{\par
139                 {\cf17 delete}[] visitado;\par
140                 {\cf17 delete}[] pilhaRecursao;\par
141                 {\cf19 return} {\cf17 true}; {\cf20 // Ciclo encontrado}\par
142             \}\par
143         \}\par
144     \}\par
145 \par
146     {\cf17 delete}[] visitado;\par
147     {\cf17 delete}[] pilhaRecursao;\par
148     {\cf19 return} {\cf17 false}; {\cf20 // Nenhum ciclo encontrado}\par
149 \}\par
}
}
{\xe \v temCicloNaoDirecionado\:GrafoLista}
{\xe \v GrafoLista\:temCicloNaoDirecionado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool GrafoLista::temCicloNaoDirecionado () const}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 185                                               \{ {\cf20 // Verifica se o grafo cont\'E9m ciclos}\par
186     {\cf18 int} numVertices = vertices.tamanho();\par
187     {\cf18 bool}* visitado = {\cf17 new} {\cf18 bool}[numVertices]();\par
188 \par
189     {\cf19 for} ({\cf18 int} i = 0; i < numVertices; ++i) \{\par
190         {\cf19 if} (!visitado[i] && verificaCicloNaoDirecionado(vertices.encontraVertice(i + 1), visitado, -1)) \{\par
191             {\cf17 delete}[] visitado;\par
192             {\cf19 return} {\cf17 true};\par
193         \}\par
194     \}\par
195 \par
196     {\cf17 delete}[] visitado;\par
197     {\cf19 return} {\cf17 false};\par
198 \}\par
}
}
{\xe \v verificaCicloNaoDirecionado\:GrafoLista}
{\xe \v GrafoLista\:verificaCicloNaoDirecionado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool GrafoLista::verificaCicloNaoDirecionado ({\b Vertice} * vertice, bool * visitado, int pai) const}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 200                                                                                             \{ {\cf20 // Verifica ciclos em grafos n\'E3o direcionados}\par
201     {\cf18 int} {\cf18 id} = vertice->id - 1;\par
202     visitado[id] = {\cf17 true};\par
203 \par
204     NoA* noAresta = vertice->arestas.getRaiz();\par
205     {\cf19 while} (noAresta) \{\par
206         {\cf18 int} destino = noAresta->a->id - 1;\par
207 \par
208         {\cf19 if} (!visitado[destino]) \{\par
209             {\cf19 if} (verificaCicloNaoDirecionado(vertices.encontraVertice(destino + 1), visitado, {\cf18 id})) \{\par
210                 {\cf19 return} {\cf17 true};\par
211             \}\par
212         \} {\cf19 else} {\cf19 if} (destino != pai) \{ {\cf20 // Se o destino j\'E1 foi visitado e n\'E3o \'E9 o pai, encontrou um ciclo}\par
213             {\cf19 return} {\cf17 true};\par
214         \}\par
215 \par
216         noAresta = noAresta->proximo;\par
217     \}\par
218 \par
219     {\cf19 return} {\cf17 false};\par
220 \}\par
}
}
{\xe \v verificaCicloUtil\:GrafoLista}
{\xe \v GrafoLista\:verificaCicloUtil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool GrafoLista::verificaCicloUtil ({\b Vertice} * vertice, bool * visitado, bool * pilhaRecursao) const}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 151                                                                                               \{ {\cf20 // Verifica ciclos em grafos direcionados}\par
152     {\cf18 int} {\cf18 id} = vertice->id - 1; {\cf20 // \'CDndice zero-based}\par
153 \par
154     {\cf20 // Se o v\'E9rtice n\'E3o foi visitado, explora suas arestas}\par
155     {\cf19 if} (!visitado[{\cf18 id}]) \{\par
156         visitado[id] = {\cf17 true};\par
157         pilhaRecursao[id] = {\cf17 true};\par
158 \par
159         NoA* noAresta = vertice->arestas.getRaiz();\par
160         {\cf19 while} (noAresta) \{\par
161             {\cf18 int} destino = noAresta->a->id - 1;\par
162 \par
163             {\cf20 // Caso n\'E3o visitado, faz a chamada recursiva}\par
164             {\cf19 if} (!visitado[destino]) \{\par
165                 Vertice* destinoVertice = vertices.encontraVertice(destino + 1);\par
166                 {\cf19 if} (verificaCicloUtil(destinoVertice, visitado, pilhaRecursao)) \{\par
167                     {\cf19 return} {\cf17 true};\par
168                 \}\par
169             \} \par
170             {\cf20 // Se j\'E1 est\'E1 na pilha de recurs\'E3o, encontrou um ciclo}\par
171             {\cf19 else} {\cf19 if} (pilhaRecursao[destino]) \{\par
172                 {\cf19 return} {\cf17 true};\par
173             \}\par
174 \par
175             noAresta = noAresta->proximo;\par
176         \}\par
177     \}\par
178 \par
179     pilhaRecursao[id] = {\cf17 false}; {\cf20 // Remove da pilha de recurs\'E3o}\par
180     {\cf19 return} {\cf17 false};\par
181 \}\par
}
}
{\xe \v vertice_ponderado\:GrafoLista}
{\xe \v GrafoLista\:vertice_ponderado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool GrafoLista::vertice_ponderado () const}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 292                                         \{     {\cf20 // Verifica se os vertices do grafo tem peso}\par
293     {\cf19 return} ponderadoVertices;   {\cf20 // Retorna o valor armazenado ao carregar o grafo}\par
294 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b grafo_lista.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b grafo_lista.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe ListaA\par \pard\plain 
{\tc\tcl2 \v ListaA}
{\xe \v ListaA}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
\par
{
{\f2 #include <listaA.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaA} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ListaA} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b existeAresta} (int idDestino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereAresta} (int destino, int peso)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoA} * {\b getRaiz} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tamanho} () const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v ListaA\:ListaA}
{\xe \v ListaA\:ListaA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListaA::ListaA ()}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6 : raiz({\cf17 nullptr}) \{\} {\cf20 // Construtor da lista de arestas}\par
}
}
{\xe \v ~ListaA\:ListaA}
{\xe \v ListaA\:~ListaA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListaA::~ListaA ()}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8                 \{ {\cf20 // Destrutor da lista de arestas}\par
9     {\cf19 while} (raiz) \{ \par
10         NoA* aux = raiz; \par
11         raiz = raiz->proximo;\par
12         {\cf17 delete} aux->a;\par
13         {\cf17 delete} aux;\par
14     \}\par
15 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v existeAresta\:ListaA}
{\xe \v ListaA\:existeAresta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ListaA::existeAresta (int idDestino)}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                            \{\par
27         NoA* atual = raiz;\par
28         {\cf19 while} (atual != {\cf17 nullptr}) \{\par
29             {\cf19 if} (atual->a->id == idDestino) \{\par
30                 {\cf19 return} {\cf17 true};\par
31             \}\par
32             atual = atual->proximo;\par
33         \}\par
34         {\cf19 return} {\cf17 false};\par
35     \}\par
}
}
{\xe \v getRaiz\:ListaA}
{\xe \v ListaA\:getRaiz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NoA} * ListaA::getRaiz () const}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                               \{ {\cf20 // M\'E9todo para retornar a raiz da lista}\par
38     {\cf19 return} raiz; {\cf20 // Retorna a raiz da lista}\par
39 \}\par
}
}
{\xe \v insereAresta\:ListaA}
{\xe \v ListaA\:insereAresta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaA::insereAresta (int destino, int peso)}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                                                 \{ {\cf20 // M\'E9todo para inserir uma aresta}\par
19         Aresta* novaAresta = {\cf17 new} Aresta(destino, peso);\par
20         NoA* novoNo = {\cf17 new} NoA(novaAresta);\par
21         novoNo->proximo = raiz;\par
22         raiz = novoNo;\par
23     \}\par
}
}
{\xe \v tamanho\:ListaA}
{\xe \v ListaA\:tamanho}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ListaA::tamanho () const}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                           \{ {\cf20 // M\'E9todo para retornar o tamanho da lista}\par
42     {\cf18 int} count = 0;\par
43     NoA* atual = raiz;\par
44     {\cf19 while} (atual) \{\par
45         count++;\par
46         atual = atual->proximo;\par
47     \}\par
48     {\cf19 return} count;\par
49 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b listaA.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b listaA.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe ListaV\par \pard\plain 
{\tc\tcl2 \v ListaV}
{\xe \v ListaV}
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
\par
{
{\f2 #include <listaV.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaV} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ListaV} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirVertice} ({\b Vertice} *vertice)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b encontraVertice} (int id) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoV} * {\b getRaiz} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tamanho} () const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v ListaV\:ListaV}
{\xe \v ListaV\:ListaV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListaV::ListaV ()}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3 : raiz({\cf17 nullptr}) \{\} {\cf20 // Construtor}\par
}
}
{\xe \v ~ListaV\:ListaV}
{\xe \v ListaV\:~ListaV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListaV::~ListaV ()}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                 \{ {\cf20 // Destrutor}\par
6     {\cf19 while} (raiz) \{\par
7         NoV* aux = raiz;\par
8         raiz = raiz->proximo;\par
9         {\cf17 delete} aux->v;\par
10         {\cf17 delete} aux;\par
11     \}\par
12 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v encontraVertice\:ListaV}
{\xe \v ListaV\:encontraVertice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * ListaV::encontraVertice (int id) const}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                              \{ {\cf20 // Encontra um v\'E9rtice na lista}\par
21     NoV* atual = raiz;\par
22     {\cf19 while} (atual) \{\par
23         {\cf19 if} (atual->v->id == {\cf18 id}) \{\par
24             {\cf19 return} atual->v;\par
25         \}\par
26         atual = atual->proximo;\par
27     \}\par
28     {\cf19 return} {\cf17 nullptr}; {\cf20 // Retorna nullptr se o v\'E9rtice n\'E3o for encontrado.}\par
29 \}\par
}
}
{\xe \v getRaiz\:ListaV}
{\xe \v ListaV\:getRaiz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NoV} * ListaV::getRaiz () const}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                            \{ {\cf20 // Retorna a raiz da lista}\par
32     {\cf19 return} raiz;\par
33 \}\par
}
}
{\xe \v inserirVertice\:ListaV}
{\xe \v ListaV\:inserirVertice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaV::inserirVertice ({\b Vertice} * vertice)}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                             \{ {\cf20 // Insere um v\'E9rtice na lista}\par
15     NoV* novo = {\cf17 new} NoV(vertice);\par
16     novo->proximo = raiz;\par
17     raiz = novo;\par
18 \}\par
}
}
{\xe \v tamanho\:ListaV}
{\xe \v ListaV\:tamanho}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ListaV::tamanho () const}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                           \{ {\cf20 // Retorna o tamanho da lista}\par
36     {\cf18 int} count = 0;\par
37     NoV* atual = raiz;\par
38     {\cf19 while} (atual) \{\par
39         count++;\par
40         atual = atual->proximo;\par
41     \}\par
42     {\cf19 return} count;\par
43 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b listaV.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b listaV.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe NoA\par \pard\plain 
{\tc\tcl2 \v NoA}
{\xe \v NoA}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\par
{
{\f2 #include <noA.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoA} ({\b Aresta} *aresta)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Aresta} * {\b a}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoA} * {\b proximo}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v NoA\:NoA}
{\xe \v NoA\:NoA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NoA::NoA ({\b Aresta} * aresta){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 : a(aresta), proximo({\cf17 nullptr}) \{\} {\cf20 // Construtor}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v a\:NoA}
{\xe \v NoA\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Aresta}* NoA::a}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v proximo\:NoA}
{\xe \v NoA\:proximo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NoA}* NoA::proximo}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b noA.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe NoV\par \pard\plain 
{\tc\tcl2 \v NoV}
{\xe \v NoV}
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\par
{
{\f2 #include <noV.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoV} ({\b Vertice} *vertice)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b v}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoV} * {\b proximo}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v NoV\:NoV}
{\xe \v NoV\:NoV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NoV::NoV ({\b Vertice} * vertice){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11 : v(vertice), proximo({\cf17 nullptr}) \{\} {\cf20 // Construtor}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v proximo\:NoV}
{\xe \v NoV\:proximo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NoV}* NoV::proximo}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v v\:NoV}
{\xe \v NoV\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice}* NoV::v}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b noV.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe PossuiPonte\par \pard\plain 
{\tc\tcl2 \v PossuiPonte}
{\xe \v PossuiPonte}
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
\par
{
{\f2 #include <Possui_Ponte.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PossuiPonte} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarAresta} (int u, int v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b verificarPonte} (int n)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v PossuiPonte\:PossuiPonte}
{\xe \v PossuiPonte\:PossuiPonte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PossuiPonte::PossuiPonte ()}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                          : tempo(0), temPonte({\cf17 false}) \{\par
6     memset(adj, 0, {\cf17 sizeof}(adj));                    {\cf20 // Inicializa a matriz de adjac\'EAncia com zeros.}\par
7     memset(visited, {\cf17 false}, {\cf17 sizeof}(visited));        {\cf20 // Marca todos os v\'E9rtices como n\'E3o visitados}\par
8     memset(disc, -1, {\cf17 sizeof}(disc));                 {\cf20 // Inicializa o array de tempos de descoberta com -1.}\par
9     memset(low, -1, {\cf17 sizeof}(low));                   {\cf20 // Inicializa o array de tempos m\'EDnimos com -1}\par
10 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarAresta\:PossuiPonte}
{\xe \v PossuiPonte\:adicionarAresta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PossuiPonte::adicionarAresta (int u, int v)}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                               \{\par
14     adj[u][v] = 1;\par
15     adj[v][u] = 1;\par
16 \}\par
}
}
{\xe \v verificarPonte\:PossuiPonte}
{\xe \v PossuiPonte\:verificarPonte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool PossuiPonte::verificarPonte (int n)}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                       \{\par
42     {\cf20 // Inicializa vari\'E1veis e chama DFS para cada componente conectado}\par
43     memset(visited, {\cf17 false}, {\cf17 sizeof}(visited));\par
44     memset(disc, -1, {\cf17 sizeof}(disc));\par
45     memset(low, -1, {\cf17 sizeof}(low));\par
46     tempo = 0;\par
47     temPonte = {\cf17 false};\par
48 \par
49     {\cf19 for} ({\cf18 int} i = 0; i < n; ++i) \{\par
50         {\cf19 if} (!visited[i]) \{\par
51             dfs(i, -1, n);\par
52         \}\par
53     \}\par
54 \par
55     {\cf19 return} temPonte;\par
56 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/{\b Possui_Ponte.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/{\b Possui_Ponte.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe Vertice\par \pard\plain 
{\tc\tcl2 \v Vertice}
{\xe \v Vertice}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\par
{
{\f2 #include <vertice.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} (int {\b id}, int {\b peso}=0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b peso}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b acessado}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaA} {\b arestas}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v Vertice\:Vertice}
{\xe \v Vertice\:Vertice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vertice::Vertice (int id, int peso = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14         : id({\cf18 id}), peso(peso), acessado({\cf17 false}), arestas() \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v acessado\:Vertice}
{\xe \v Vertice\:acessado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Vertice::acessado}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arestas\:Vertice}
{\xe \v Vertice\:arestas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaA} Vertice::arestas}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v id\:Vertice}
{\xe \v Vertice\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Vertice::id}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v peso\:Vertice}
{\xe \v Vertice\:peso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Vertice::peso}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPP-Teoria-Dos-Grafos/src/implementations/{\b vertice.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documenta\'E7\'E3o do ficheiro{\tc \v Documenta\'E7\'E3o do ficheiro}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/Carrega_Arquivo.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/Carrega_Arquivo.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/Carrega_Arquivo.cpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Carrega_arquivo.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} {\b carrega_grafo} (const string &nome_arquivo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v carrega_grafo\:Carrega_Arquivo.cpp}
{\xe \v Carrega_Arquivo.cpp\:carrega_grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Grafo} carrega_grafo (const string & nome_arquivo)}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                                 \{\par
43     ifstream arquivo(nome_arquivo);\par
44     {\cf19 if} (!arquivo) \{\par
45         cerr << {\cf22 "Erro ao abrir o arquivo!"} << endl;\par
46         exit(1);\par
47     \}\par
48 \par
49     {\cf20 // L\'EA o n\'FAmero de v\'E9rtices e arestas do arquivo}\par
50     {\cf18 int} num_vertices, num_arestas;\par
51     arquivo >> num_vertices >> num_arestas;\par
52 \par
53     {\cf20 // Cria um novo grafo com o n\'FAmero de v\'E9rtices lido}\par
54     Grafo grafo(num_vertices);\par
55 \par
56     {\cf20 // L\'EA as informa\'E7\'F5es das arestas do arquivo e adiciona ao grafo}\par
57     {\cf19 for} ({\cf18 int} i = 0; i < num_arestas; ++i) \{\par
58         {\cf18 int} origem, destino, peso;\par
59         arquivo >> origem >> destino >> peso;\par
60         grafo.adicionar_aresta(origem, destino, peso);\par
61     \}\par
62 \par
63     arquivo.close();\par
64     {\cf19 return} grafo;\par
65 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/Carrega_Arquivo.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/Carrega_Arquivo.h}
{\xe \v CPP-Teoria-Dos-Grafos/Carrega_Arquivo.h}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Aresta}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Grafo}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grafo} {\b carrega_grafo} (const string &nome_arquivo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v carrega_grafo\:Carrega_Arquivo.h}
{\xe \v Carrega_Arquivo.h\:carrega_grafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Grafo} carrega_grafo (const string & nome_arquivo)}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                                 \{\par
43     ifstream arquivo(nome_arquivo);\par
44     {\cf19 if} (!arquivo) \{\par
45         cerr << {\cf22 "Erro ao abrir o arquivo!"} << endl;\par
46         exit(1);\par
47     \}\par
48 \par
49     {\cf20 // L\'EA o n\'FAmero de v\'E9rtices e arestas do arquivo}\par
50     {\cf18 int} num_vertices, num_arestas;\par
51     arquivo >> num_vertices >> num_arestas;\par
52 \par
53     {\cf20 // Cria um novo grafo com o n\'FAmero de v\'E9rtices lido}\par
54     Grafo grafo(num_vertices);\par
55 \par
56     {\cf20 // L\'EA as informa\'E7\'F5es das arestas do arquivo e adiciona ao grafo}\par
57     {\cf19 for} ({\cf18 int} i = 0; i < num_arestas; ++i) \{\par
58         {\cf18 int} origem, destino, peso;\par
59         arquivo >> origem >> destino >> peso;\par
60         grafo.adicionar_aresta(origem, destino, peso);\par
61     \}\par
62 \par
63     arquivo.close();\par
64     {\cf19 return} grafo;\par
65 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Carrega_Arquivo.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/Carrega_Arquivo.h}
{\xe \v CPP-Teoria-Dos-Grafos/Carrega_Arquivo.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CARREGA_ARQUIVO_H_INCLUDED}\par
2 {\cf21 #define CARREGA_ARQUIVO_H_INCLUDED}\par
3 {\cf21 #include <iostream>}\par
4 {\cf21 #include <fstream>}\par
5 {\cf21 #include <string>}\par
6 {\cf17 using namespace }std;\par
7 \par
8 {\cf20 // Estrutura para representar uma aresta com origem, destino e peso}\par
9 {\cf17 struct }Aresta \{\par
10     {\cf18 int} origem;\par
11     {\cf18 int} destino;\par
12     {\cf18 int} peso;\par
13 \};\par
14 \par
15 {\cf20 // Classe que representa um grafo}\par
16 {\cf17 class }Grafo \{\par
17 {\cf17 public}:\par
18     {\cf18 int} num_vertices;       {\cf20 // N\'FAmero total de v\'E9rtices no grafo}\par
19     Aresta** adjacencias;   {\cf20 // Matriz de adjac\'EAncias para representar as conex\'F5es entre os v\'E9rtices}\par
20 \par
21     {\cf20 // Construtor: Inicializa o grafo com o n\'FAmero especificado de v\'E9rtices}\par
22     Grafo({\cf18 int} vertices);\par
23 \par
24     {\cf20 // Adiciona uma aresta ao grafo, especificando origem, destino e peso}\par
25     {\cf18 void} adicionar_aresta({\cf18 int} origem, {\cf18 int} destino, {\cf18 int} peso);\par
26 \par
27     {\cf20 // Exibe a representa\'E7\'E3o do grafo no console}\par
28     {\cf18 void} exibir_grafo();\par
29 \par
30     {\cf20 // Destrutor: Libera a mem\'F3ria alocada para a matriz de adjac\'EAncias}\par
31     ~Grafo();\par
32 \};\par
33 \par
34 {\cf20 // Fun\'E7\'E3o para carregar um grafo a partir de um arquivo}\par
35 Grafo carrega_grafo({\cf17 const} {\cf18 string}& nome_arquivo);\par
36 \par
37 \par
38 {\cf21 #endif }{\cf20 // CARREGA_ARQUIVO_H_INCLUDED}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/Possui_articulacao.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/Possui_articulacao.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/Possui_articulacao.cpp}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Possui_articulacao.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include <algorithm>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/Possui_articulacao.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/Possui_articulacao.h}
{\xe \v CPP-Teoria-Dos-Grafos/Possui_articulacao.h}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Grafo}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Possui_articulacao.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/Possui_articulacao.h}
{\xe \v CPP-Teoria-Dos-Grafos/Possui_articulacao.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef POSSUI_ARTICULACAO_H}\par
2 {\cf21 #define POSSUI_ARTICULACAO_H}\par
3 \par
4 {\cf17 class }Grafo \{\par
5     {\cf18 int} V; {\cf20 // N\'FAmero de v\'E9rtices}\par
6     {\cf18 int}** adj; {\cf20 // Matriz de adjac\'EAncia}\par
7 \par
8     {\cf20 // Fun\'E7\'E3o auxiliar para encontrar v\'E9rtices de articula\'E7\'E3o usando DFS}\par
9     {\cf18 bool} possuiArticulacaoUtil({\cf18 int} v, {\cf18 bool} visitado[], {\cf18 int} visit[], {\cf18 int} low[], {\cf18 int} parent[]);\par
10 \par
11 {\cf17 public}:\par
12     Grafo({\cf18 int} V); {\cf20 // Construtor}\par
13     ~Grafo(); {\cf20 // Destrutor}\par
14     {\cf18 void} adicionarAresta({\cf18 int} v, {\cf18 int} w); {\cf20 // Adiciona arestas}\par
15     {\cf18 bool} possuiArticulacao(); {\cf20 // Verifica se h\'E1 ao menos um v\'E9rtice de articula\'E7\'E3o}\par
16 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/Possui_Ponte.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/Possui_Ponte.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/Possui_Ponte.cpp}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Possui_ponte.h"}\par
{\f2 #include <cstring>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/Possui_Ponte.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/Possui_Ponte.h}
{\xe \v CPP-Teoria-Dos-Grafos/Possui_Ponte.h}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PossuiPonte}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b MAX} = 100\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das vari\'E1veis\par
\pard\plain 
{\xe \v MAX\:Possui_Ponte.h}
{\xe \v Possui_Ponte.h\:MAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int MAX = 100}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Possui_Ponte.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/Possui_Ponte.h}
{\xe \v CPP-Teoria-Dos-Grafos/Possui_Ponte.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef POSSUI_PONTE_H_INCLUDED}\par
2 {\cf21 #define POSSUI_PONTE_H_INCLUDED}\par
3 \par
4 {\cf17 using namespace }std;\par
5 \par
6 {\cf17 const} {\cf18 int} MAX = 100; {\cf20 // Define o tamanho m\'E1ximo do grafo}\par
7 \par
8 {\cf17 class }PossuiPonte \{\par
9 {\cf17 private}:\par
10     {\cf18 int} tempo;             {\cf20 // Vari\'E1vel para rastrear o tempo de descoberta}\par
11     {\cf18 bool} temPonte;         {\cf20 // Indica se h\'E1 pelo menos uma ponte}\par
12     {\cf18 int} adj[MAX][MAX];     {\cf20 // Matriz de adjac\'EAncia representada como array est\'E1tico}\par
13     {\cf18 bool} visited[MAX];     {\cf20 // Array para verificar os n\'F3s visitados}\par
14     {\cf18 int} disc[MAX];         {\cf20 // Array para armazenar o tempo de descoberta}\par
15     {\cf18 int} low[MAX];          {\cf20 // Array para armazenar o menor tempo alcan\'E7\'E1vel}\par
16 \par
17     {\cf18 void} dfs({\cf18 int} u, {\cf18 int} parent, {\cf18 int} n); {\cf20 // Fun\'E7\'E3o auxiliar de DFS}\par
18 \par
19 {\cf17 public}:\par
20     PossuiPonte();                       {\cf20 // Construtor para inicializar os dados}\par
21     {\cf18 void} adicionarAresta({\cf18 int} u, {\cf18 int} v);  {\cf20 // Adiciona aresta ao grafo}\par
22     {\cf18 bool} verificarPonte({\cf18 int} n);          {\cf20 // Verifica se h\'E1 pelo menos uma ponte}\par
23 \};\par
24 \par
25 \par
26 {\cf21 #endif }{\cf20 // POSSUI_PONTE_H_INCLUDED}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/README.md\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/README.md}
{\xe \v CPP-Teoria-Dos-Grafos/README.md}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/core/Grafo.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/core/Grafo.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/core/Grafo.cpp}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Grafo.h"}\par
{\f2 #include <iostream>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/core/Grafo.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/core/Grafo.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/core/Grafo.h}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Grafo}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Grafo.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/core/Grafo.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/core/Grafo.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GRAFO_H}\par
2 {\cf21 #define GRAFO_H}\par
3 \par
4 {\cf17 class }Grafo \{\par
5 {\cf17 protected}:\par
6     {\cf18 int}** adjacencias; {\cf20 // Matriz de adjac\'EAncias}\par
7     {\cf18 int} numVertices;   {\cf20 // N\'FAmero de v\'E9rtices}\par
8 \par
9     {\cf18 bool} ponderadoVertices; {\cf20 //pesoVerticesicesices  0 == n\'EF\'BF\'BDo ponderados  1 == ponderados}\par
10     {\cf18 bool} ponderadosArestas; {\cf20 //arestas 0 == n\'EF\'BF\'BDo ponderadas  1 == ponderadas}\par
11     {\cf18 bool} direcionado; {\cf20 // 0 == n\'EF\'BF\'BDo direcionado 1 == direcionado}\par
12 \par
13 {\cf17 public}:\par
14     Grafo({\cf18 int} numVertices, {\cf18 bool} ponderadoVertices, {\cf18 bool} ponderadosArestas, {\cf18 bool} direcionado);  {\cf20 // Construtor}\par
15     Grafo({\cf18 int} numVertices);\par
16     {\cf17 virtual} ~Grafo(); {\cf20 // Destrutor}\par
17 \par
18     {\cf18 void} adicionarAresta({\cf18 int} origem, {\cf18 int} destino);\par
19     {\cf18 void} removerAresta({\cf18 int} origem, {\cf18 int} destino);\par
20     {\cf18 void} imprimirGrafo();\par
21     {\cf18 int} getGrau({\cf18 int} vertice);\par
22 \par
23     {\cf18 bool} ehDirecionado();\par
24     {\cf18 bool} verticePonderado();\par
25     {\cf18 bool} arestaPonderada();\par
26     {\cf18 int} get_ordem();\par
27 \par
28     {\cf17 virtual} {\cf18 void} imprime_grafo();\par
29     {\cf17 virtual} {\cf18 bool} ehConexo();\par
30     {\cf17 virtual} {\cf18 bool} ehArvore();\par
31     {\cf17 virtual} {\cf18 bool} ehCompleto();\par
32 \par
33     {\cf20 // M\'E9todos getters}\par
34     {\cf18 int}** getAdjacencias(){\cf17  const }\{ {\cf19 return} adjacencias; \}\par
35     {\cf18 int} getNumVertices(){\cf17  const }\{ {\cf19 return} numVertices; \}\par
36 \};\par
37 \par
38 {\cf21 #endif }{\cf20 // GRAFO_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/aresta.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/aresta.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/aresta.h}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Aresta}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
aresta.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/aresta.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/aresta.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef ARESTA_H}\par
2 {\cf21 #define ARESTA_H}\par
3 \par
4 {\cf17 class }Aresta \{ {\cf20 // Classe que representa uma aresta}\par
5 {\cf17 public}:\par
6     {\cf18 int} id;          {\cf20 // ID do v\'E9rtice destino}\par
7     {\cf18 int} peso;        {\cf20 // Peso da aresta}\par
8     {\cf18 bool} acessada;   {\cf20 // Indicador de se a aresta foi acessada}\par
9 \par
10     Aresta({\cf18 int} {\cf18 id}, {\cf18 int} peso = 0) {\cf20 // Construtor}\par
11         : id(id), peso(peso), acessada(false) \{\} {\cf20 // Inicializa os atributos}\par
12 \};\par
13 \par
14 {\cf21 #endif }{\cf20 // ARESTA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/aresta_ponderada.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/aresta_ponderada.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/aresta_ponderada.cpp}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "aresta_ponderada.h"}\par
{\f2 #include "grafo_lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b arestasPonderadas} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v arestasPonderadas\:aresta_ponderada.cpp}
{\xe \v aresta_ponderada.cpp\:arestasPonderadas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool arestasPonderadas (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                 \{ {\cf20 // Fun\'E7\'E3o que verifica se as arestas s\'E3o ponderadas}\par
8     {\cf19 return} grafo.arestasPonderadas(); {\cf20 // Retorna o valor retornado pela fun\'E7\'E3o arestasPonderadas da classe GrafoLista}\par
9 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/aresta_ponderada.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/aresta_ponderada.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/aresta_ponderada.h}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "grafo_lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b arestasPonderadas} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v arestasPonderadas\:aresta_ponderada.h}
{\xe \v aresta_ponderada.h\:arestasPonderadas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool arestasPonderadas (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                 \{ {\cf20 // Fun\'E7\'E3o que verifica se as arestas s\'E3o ponderadas}\par
8     {\cf19 return} grafo.arestasPonderadas(); {\cf20 // Retorna o valor retornado pela fun\'E7\'E3o arestasPonderadas da classe GrafoLista}\par
9 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
aresta_ponderada.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/aresta_ponderada.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/aresta_ponderada.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef ARESTA_PONDERADA_H}\par
2 {\cf21 #define ARESTA_PONDERADA_H}\par
3 \par
4 {\cf21 #include "grafo_lista.h"}\par
5 \par
6 {\cf18 bool} arestasPonderadas({\cf17 const} GrafoLista& grafo); {\cf20 // Retorna se as arestas t\'EAm peso}\par
7 \par
8 {\cf21 #endif }{\cf20 // ARESTA_PONDERADA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/eh_arvore.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_arvore.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_arvore.cpp}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "eh_arvore.h"}\par
{\f2 #include "grafo_lista.h"}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehArvore} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v ehArvore\:eh_arvore.cpp}
{\xe \v eh_arvore.cpp\:ehArvore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ehArvore (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                        \{\par
8     {\cf20 // Verifica se o grafo tem ciclo}\par
9     {\cf19 if} (grafo.ehDirecionado()) \{\par
10         {\cf19 if} (grafo.temCiclo()) \{ \par
11             {\cf19 return} {\cf17 false}; {\cf20 // Grafo direcionado com ciclo n\'E3o \'E9 uma \'E1rvore}\par
12         \}\par
13     \} {\cf19 else} \{\par
14         {\cf19 if} (grafo.temCicloNaoDirecionado()) \{\par
15             {\cf19 return} {\cf17 false}; {\cf20 // Grafo n\'E3o direcionado com ciclo n\'E3o \'E9 uma \'E1rvore}\par
16         \}\par
17     \}\par
18 \par
19     {\cf20 // Verifica se o grafo \'E9 conexo}\par
20     {\cf19 if} (!grafo.ehConexo()) \{\par
21         {\cf19 return} {\cf17 false}; {\cf20 // Grafo desconexo n\'E3o \'E9 uma \'E1rvore}\par
22     \}\par
23 \par
24     {\cf19 return} {\cf17 true}; {\cf20 // Se n\'E3o tem ciclo e \'E9 conexo, \'E9 uma \'E1rvore}\par
25 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/eh_arvore.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_arvore.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_arvore.h}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "grafo_lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehArvore} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v ehArvore\:eh_arvore.h}
{\xe \v eh_arvore.h\:ehArvore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ehArvore (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                        \{\par
8     {\cf20 // Verifica se o grafo tem ciclo}\par
9     {\cf19 if} (grafo.ehDirecionado()) \{\par
10         {\cf19 if} (grafo.temCiclo()) \{ \par
11             {\cf19 return} {\cf17 false}; {\cf20 // Grafo direcionado com ciclo n\'E3o \'E9 uma \'E1rvore}\par
12         \}\par
13     \} {\cf19 else} \{\par
14         {\cf19 if} (grafo.temCicloNaoDirecionado()) \{\par
15             {\cf19 return} {\cf17 false}; {\cf20 // Grafo n\'E3o direcionado com ciclo n\'E3o \'E9 uma \'E1rvore}\par
16         \}\par
17     \}\par
18 \par
19     {\cf20 // Verifica se o grafo \'E9 conexo}\par
20     {\cf19 if} (!grafo.ehConexo()) \{\par
21         {\cf19 return} {\cf17 false}; {\cf20 // Grafo desconexo n\'E3o \'E9 uma \'E1rvore}\par
22     \}\par
23 \par
24     {\cf19 return} {\cf17 true}; {\cf20 // Se n\'E3o tem ciclo e \'E9 conexo, \'E9 uma \'E1rvore}\par
25 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
eh_arvore.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_arvore.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_arvore.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef EH_ARVORE_H}\par
2 {\cf21 #define EH_ARVORE_H}\par
3 \par
4 {\cf21 #include "grafo_lista.h"}\par
5 \par
6 {\cf18 bool} ehArvore({\cf17 const} GrafoLista& grafo); {\cf20 // Verifica se o grafo \'E9 uma \'E1rvore}\par
7 \par
8 {\cf21 #endif }{\cf20 // EH_ARVORE_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/eh_bipartido.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_bipartido.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_bipartido.cpp}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "eh_bipartido.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/eh_bipartido.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_bipartido.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_bipartido.h}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../core/Grafo.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GrafoBipartido}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
eh_bipartido.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_bipartido.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_bipartido.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef EH_BIPARTIDO_H}\par
2 {\cf21 #define EH_BIPARTIDO_H}\par
3 \par
4 {\cf21 #include "../core/Grafo.h"}\par
5 \par
6 {\cf17 class }GrafoBipartido : {\cf17 public} Grafo \{\par
7 {\cf17 public}:\par
8     GrafoBipartido({\cf18 int} numVertices);\par
9     {\cf18 bool} ehBipartido(); {\cf20 // Declara\'E7\'E3o do m\'E9todo}\par
10 \};\par
11 \par
12 {\cf21 #endif }{\cf20 // EH_BIPARTIDO_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/eh_completo.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_completo.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_completo.cpp}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <cstdlib>}\par
{\f2 #include "eh_completo.h"}\par
{\f2 #include "grafo_lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehCompleto} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v ehCompleto\:eh_completo.cpp}
{\xe \v eh_completo.cpp\:ehCompleto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ehCompleto (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8                                          \{ {\cf20 // Fun\'E7\'E3o que verifica se o grafo \'E9 completo}\par
9     {\cf17 const} ListaV& vertices = grafo.getVertices(); {\cf20 // Obt\'E9m a lista de v\'E9rtices}\par
10     {\cf18 int} numVertices = vertices.tamanho();         {\cf20 // Obt\'E9m o n\'FAmero de v\'E9rtices}\par
11 \par
12     NoV* noVertice = vertices.getRaiz();        {\cf20 // Obt\'E9m o n\'F3 raiz}\par
13     {\cf19 while} (noVertice) \{           {\cf20 // Enquanto houver v\'E9rtices na lista}\par
14         {\cf19 if} (noVertice->v->arestas.tamanho() != numVertices - 1) \{   {\cf20 // Se o v\'E9rtice n\'E3o tem o n\'FAmero correto de arestas}\par
15             {\cf19 return} {\cf17 false}; {\cf20 // O grafo n\'E3o \'E9 completo}\par
16         \}\par
17         noVertice = noVertice->proximo; {\cf20 // Move para o pr\'F3ximo v\'E9rtice}\par
18     \}\par
19     {\cf19 return} {\cf17 true};  {\cf20 // O grafo \'E9 completo}\par
20 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/eh_completo.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_completo.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_completo.h}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "grafo_lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ehCompleto} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v ehCompleto\:eh_completo.h}
{\xe \v eh_completo.h\:ehCompleto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ehCompleto (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8                                          \{ {\cf20 // Fun\'E7\'E3o que verifica se o grafo \'E9 completo}\par
9     {\cf17 const} ListaV& vertices = grafo.getVertices(); {\cf20 // Obt\'E9m a lista de v\'E9rtices}\par
10     {\cf18 int} numVertices = vertices.tamanho();         {\cf20 // Obt\'E9m o n\'FAmero de v\'E9rtices}\par
11 \par
12     NoV* noVertice = vertices.getRaiz();        {\cf20 // Obt\'E9m o n\'F3 raiz}\par
13     {\cf19 while} (noVertice) \{           {\cf20 // Enquanto houver v\'E9rtices na lista}\par
14         {\cf19 if} (noVertice->v->arestas.tamanho() != numVertices - 1) \{   {\cf20 // Se o v\'E9rtice n\'E3o tem o n\'FAmero correto de arestas}\par
15             {\cf19 return} {\cf17 false}; {\cf20 // O grafo n\'E3o \'E9 completo}\par
16         \}\par
17         noVertice = noVertice->proximo; {\cf20 // Move para o pr\'F3ximo v\'E9rtice}\par
18     \}\par
19     {\cf19 return} {\cf17 true};  {\cf20 // O grafo \'E9 completo}\par
20 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
eh_completo.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_completo.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_completo.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef EH_COMPLETO_H}\par
2 {\cf21 #define EH_COMPLETO_H}\par
3 \par
4 {\cf21 #include <iostream>}\par
5 {\cf21 #include "grafo_lista.h"}\par
6 \par
7 {\cf17 using namespace }std;\par
8 \par
9 {\cf20 // Verifica se o grafo \'E9 completo}\par
10 {\cf18 bool} ehCompleto({\cf17 const} GrafoLista& grafo);\par
11 \par
12 {\cf21 #endif }{\cf20 // EH_COMPLETO_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/eh_direcionado.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_direcionado.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_direcionado.cpp}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "eh_direcionado.h"}\par
{\f2 #include "grafo_lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b eh_direcionado} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v eh_direcionado\:eh_direcionado.cpp}
{\xe \v eh_direcionado.cpp\:eh_direcionado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int eh_direcionado (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5 \{\par
6     {\cf19 return} grafo.ehDirecionado();   {\cf20 // Retorna valor armazenado em grafo}\par
7 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/eh_direcionado.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_direcionado.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_direcionado.h}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "grafo_lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b eh_direcionado} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v eh_direcionado\:eh_direcionado.h}
{\xe \v eh_direcionado.h\:eh_direcionado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int eh_direcionado (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5 \{\par
6     {\cf19 return} grafo.ehDirecionado();   {\cf20 // Retorna valor armazenado em grafo}\par
7 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
eh_direcionado.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/eh_direcionado.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/eh_direcionado.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef EH_DIRECIONADO_H}\par
2 {\cf21 #define EH_DIRECIONADO_H}\par
3 \par
4 {\cf21 #include <iostream>}\par
5 {\cf21 #include "grafo_lista.h"}\par
6 \par
7 {\cf18 int} eh_direcionado({\cf17 const} GrafoLista& grafo);    {\cf20 // Fun\'E7\'E3o que verifica se grafo tem arestas direcionadas}\par
8 \par
9 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/get_grau.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/get_grau.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/get_grau.cpp}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "get_grau.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/get_grau.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/get_grau.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/get_grau.h}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../core/grafo.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GrafoGrau}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
get_grau.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/get_grau.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/get_grau.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GET_GRAU_H}\par
2 {\cf21 #define GET_GRAU_H}\par
3 \par
4 {\cf21 #include "../core/grafo.h"}\par
5 \par
6 {\cf17 class }GrafoGrau : {\cf17 public} Grafo \{\par
7 {\cf17 public}:\par
8     {\cf20 // Construtor e destrutor herdados}\par
9     GrafoGrau({\cf18 int} numVertices) : Grafo(numVertices) \{\}\par
10 \par
11     {\cf20 // M\'E9todo que calcula o grau de um v\'E9rtice}\par
12     {\cf18 int} getGrau({\cf18 int} vertice);\par
13 \};\par
14 \par
15 {\cf21 #endif }{\cf20 // GET_GRAU_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/get_ordem.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/get_ordem.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/get_ordem.cpp}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "get_ordem.h"}\par
{\f2 #include "grafo_lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_ordem} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v get_ordem\:get_ordem.cpp}
{\xe \v get_ordem.cpp\:get_ordem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int get_ordem (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5 \{\par
6     {\cf17 const} ListaV& vertices = grafo.getVertices();\par
7     {\cf19 return} vertices.tamanho();  {\cf20 // Retorna valor armazenado em garfo pelo tamanho do vetor de vertices}\par
8 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/get_ordem.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/get_ordem.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/get_ordem.h}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "grafo_lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_ordem} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v get_ordem\:get_ordem.h}
{\xe \v get_ordem.h\:get_ordem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int get_ordem (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5 \{\par
6     {\cf17 const} ListaV& vertices = grafo.getVertices();\par
7     {\cf19 return} vertices.tamanho();  {\cf20 // Retorna valor armazenado em garfo pelo tamanho do vetor de vertices}\par
8 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
get_ordem.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/get_ordem.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/get_ordem.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GET_ORDEM_H}\par
2 {\cf21 #define GET_ORDEM_H}\par
3 \par
4 {\cf21 #include <iostream>}\par
5 {\cf21 #include "grafo_lista.h"}\par
6 \par
7 {\cf18 int} get_ordem({\cf17 const} GrafoLista& grafo);     {\cf20 // Fun\'E7\'E3o que retorna o n\'FAmero de elementos de um grafo}\par
8 \par
9 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/grafo_lista.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_lista.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_lista.cpp}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "grafo_lista.h"}\par
{\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <cstdlib>}\par
{\f2 #include <string>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/grafo_lista.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_lista.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_lista.h}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "vertice.h"}\par
{\f2 #include "listaV.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GrafoLista}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
grafo_lista.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_lista.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_lista.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GRAFO_LISTA_H}\par
2 {\cf21 #define GRAFO_LISTA_H}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include "vertice.h"}\par
6 {\cf21 #include "listaV.h"}\par
7 \par
8 {\cf17 using namespace }std;\par
9 \par
10 {\cf17 class }GrafoLista \{ {\cf20 // Classe que representa um grafo usando listas }\par
11 {\cf17 private}:\par
12     ListaV vertices;          {\cf20 // Lista de v\'E9rtices}\par
13     {\cf18 bool} direcionado;         {\cf20 // Indica se o grafo \'E9 direcionado}\par
14     {\cf18 bool} ponderadoVertices;   {\cf20 // Indica se os v\'E9rtices t\'EAm peso}\par
15     {\cf18 bool} ponderadoArestas;    {\cf20 // Indica se as arestas t\'EAm peso}\par
16 \par
17 {\cf17 public}:\par
18     GrafoLista({\cf18 string} nomeArquivo); {\cf20 // Construtor que carrega o grafo de um arquivo}\par
19     ~GrafoLista();                              {\cf20 // Destrutor para limpar a mem\'F3ria}\par
20 \par
21     {\cf18 void} imprimeGrafo() {\cf17 const};                 {\cf20 // Imprime o grafo no formato lista de adjac\'EAncia}\par
22     {\cf18 bool} arestasPonderadas() {\cf17 const};            {\cf20 // Retorna se as arestas t\'EAm peso}\par
23     {\cf18 bool} temCiclo() {\cf17 const};                     {\cf20 // Verifica se o grafo direcionado cont\'E9m ciclos}\par
24     {\cf18 bool} ehCompleto() {\cf17 const};                   {\cf20 // Verifica se o grafo \'E9 completo}\par
25     {\cf17 const} ListaV& getVertices() {\cf17 const}; {\cf20 // Retorna uma refer\'EAncia constante para os v\'E9rtices}\par
26     {\cf18 bool} ehConexo() {\cf17 const}; {\cf20 // Verifica se o grafo \'E9 conexo          }\par
27     {\cf18 void} dfsConexao(Vertice* vertice, {\cf18 bool}* visitado) {\cf17 const}; {\cf20 // DFS para verificar a conex\'E3o do grafo}\par
28     {\cf18 bool} verificaCicloUtil(Vertice* vertice, {\cf18 bool}* visitado, {\cf18 bool}* pilhaRecursao) {\cf17 const}; {\cf20 // Verifica ciclos em grafos direcionados}\par
29     {\cf18 bool} verificaCicloNaoDirecionado(Vertice* vertice, {\cf18 bool}* visitado, {\cf18 int} pai) {\cf17 const}; {\cf20 // Verifica ciclos em grafos n\'E3o direcionados}\par
30     {\cf18 bool} temCicloNaoDirecionado() {\cf17 const}; {\cf20 // Verifica se o grafo nao direcionado cont\'E9m ciclos}\par
31     {\cf18 bool} ehDirecionado() {\cf17 const}; {\cf20 // Verifica se o grafo \'E9 direcionado}\par
32     {\cf18 bool} vertice_ponderado() {\cf17 const}; {\cf20 // Verifica se o grafo tem vertices com pesos}\par
33 \par
34 \par
35 {\cf17 private}:\par
36     {\cf18 void} adicionaVertice({\cf18 int} {\cf18 id}, {\cf18 int} peso);    {\cf20 // Adiciona um v\'E9rtice ao grafo}\par
37     {\cf18 void} adicionaAresta({\cf18 int} origem, {\cf18 int} destino, {\cf18 int} peso); {\cf20 // Adiciona uma aresta ao grafo}\par
38    \par
39 \};\par
40 \par
41 {\cf21 #endif }{\cf20 // GRAFO_LISTA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/grafo_matriz.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_matriz.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_matriz.cpp}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "grafo_matriz.h"}\par
{\f2 #include <iostream>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/grafo_matriz.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_matriz.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_matriz.h}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../core/Grafo.h"}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b grafo_matriz}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
grafo_matriz.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_matriz.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/grafo_matriz.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GRAFO_MATRIZ_H}\par
2 {\cf21 #define GRAFO_MATRIZ_H}\par
3 \par
4 {\cf21 #include "../core/Grafo.h"}\par
5 {\cf21 #include <iostream>}\par
6 {\cf17 using namespace }std;\par
7 \par
8 {\cf17 class }grafo_matriz : {\cf17 public} Grafo\par
9 \{\par
10 {\cf17 private}:\par
11 \par
12     {\cf18 int} * pesoVerticesices;  {\cf20 // valor de cada pesoVerticesicesice}\par
13     {\cf18 int} ** grafo; {\cf20 // vector para substituir lista e matriz}\par
14     {\cf18 int} tam_lista({\cf18 int} a);  {\cf20 // fun\'EF\'BF\'BD\'EF\'BF\'BDo que retorna o tamanho de uma array que representa uma matriz triangular quadrada de a colunas/linhas}\par
15 \par
16 \par
17 {\cf17 public}:\par
18 \par
19     grafo_matriz({\cf18 int} numVertices, {\cf18 bool} ponderadoVertices, {\cf18 bool} ponderadosArestas, {\cf18 bool} direcionado, {\cf18 int} pesoVerticesices[]);\par
20     ~grafo_matriz();\par
21     {\cf18 void} adiciona_aresta({\cf18 int} a, {\cf18 int} b,{\cf18 int} c);\par
22     {\cf18 void} imprime_grafo() {\cf17 override};\par
23     {\cf18 bool} ehConexo() {\cf17 override};\par
24     {\cf18 void} dfsConexao({\cf18 int} vertice, {\cf18 bool} *verticeVerificado);\par
25     {\cf18 bool} ehArvore() {\cf17 override};\par
26     {\cf18 bool} temCiclo();\par
27     {\cf18 bool} ehCompleto() {\cf17 override};\par
28 \par
29     \par
30 \};\par
31 \par
32 {\cf21 #endif }{\cf20 // GRAFO_MATRIZ_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/listaA.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/listaA.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/listaA.cpp}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "listaA.h"}\par
{\f2 #include <cstdlib>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/listaA.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/listaA.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/listaA.h}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "aresta.h"}\par
{\f2 #include "noA.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaA}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
listaA.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/listaA.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/listaA.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef LISTAA_H}\par
2 {\cf21 #define LISTAA_H}\par
3 \par
4 {\cf21 #include "aresta.h"}\par
5 {\cf21 #include "noA.h"}\par
6 \par
7 {\cf17 class }ListaA \{ {\cf20 // Classe que representa uma lista de arestas}\par
8 {\cf17 private}:\par
9     NoA* raiz; {\cf20 // Raiz da lista}\par
10 \par
11 {\cf17 public}:\par
12     ListaA(); {\cf20 // Construtor}\par
13     ~ListaA(); {\cf20 // Destrutor}\par
14 \par
15    {\cf18 bool} existeAresta({\cf18 int} idDestino); {\cf20 // Verifica se existe uma aresta com o ID de destino}\par
16     {\cf18 void} insereAresta({\cf18 int} destino, {\cf18 int} peso); {\cf20 // Insere uma aresta na lista}\par
17     NoA* getRaiz() {\cf17 const}; {\cf20 // Retorna a raiz da lista}\par
18     {\cf18 int} tamanho() {\cf17 const}; {\cf20 // Retorna o tamanho da lista}\par
19 \par
20 \par
21 \};\par
22 \par
23 {\cf21 #endif }{\cf20 // LISTAA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/listaV.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/listaV.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/listaV.cpp}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "listaV.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/listaV.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/listaV.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/listaV.h}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "vertice.h"}\par
{\f2 #include "noV.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaV}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
listaV.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/listaV.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/listaV.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef LISTAV_H}\par
2 {\cf21 #define LISTAV_H}\par
3 \par
4 {\cf21 #include "vertice.h"}\par
5 {\cf21 #include "noV.h"}\par
6 \par
7 {\cf17 class }ListaV \{ {\cf20 // Classe que representa uma lista de v\'E9rtices}\par
8 {\cf17 private}:\par
9     NoV* raiz; {\cf20 // Raiz da lista}\par
10 \par
11 {\cf17 public}:\par
12     ListaV(); {\cf20 // Construtor}\par
13     ~ListaV(); {\cf20 // Destrutor}\par
14     {\cf18 void} inserirVertice(Vertice* vertice); {\cf20 // Insere um v\'E9rtice na lista}\par
15     Vertice* encontraVertice({\cf18 int} {\cf18 id}) {\cf17 const}; {\cf20 // Encontra um v\'E9rtice na lista}\par
16     NoV* getRaiz() {\cf17 const}; {\cf20 // Retorna a raiz da lista}\par
17     {\cf18 int} tamanho() {\cf17 const}; {\cf20 // Retorna o tamanho da lista}\par
18   \par
19 \par
20 \par
21 \};\par
22 \par
23 {\cf21 #endif }{\cf20 // LISTAV_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/n_conexo.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/n_conexo.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/n_conexo.cpp}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "n_conexo.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/n_conexo.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/n_conexo.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/n_conexo.h}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../core/Grafo.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GrafoConexo}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
n_conexo.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/n_conexo.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/n_conexo.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef N_CONEXO_H}\par
2 {\cf21 #define N_CONEXO_H}\par
3 \par
4 {\cf21 #include "../core/Grafo.h"}\par
5 \par
6 {\cf17 class }GrafoConexo : {\cf17 public} Grafo \{\par
7 {\cf17 public}:\par
8     GrafoConexo({\cf18 int} numVertices);\par
9     {\cf18 int} nConexo(); {\cf20 // Declara\'E7\'E3o correta}\par
10 \};\par
11 \par
12 {\cf21 #endif }{\cf20 // N_CONEXO_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/noA.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/noA.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/noA.h}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "aresta.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NoA}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
noA.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/noA.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/noA.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef NOA_H}\par
2 {\cf21 #define NOA_H}\par
3 \par
4 {\cf21 #include "aresta.h"}\par
5 \par
6 \par
7 {\cf17 class }NoA \{ {\cf20 // Classe que representa um n\'F3 de uma lista de arestas}\par
8 {\cf17 public}:\par
9     Aresta* a;    {\cf20 // Ponteiro para a aresta}\par
10     NoA* proximo; {\cf20 // Pr\'F3ximo n\'F3 na lista}\par
11 \par
12     NoA(Aresta* aresta) : a(aresta), proximo(nullptr) \{\} {\cf20 // Construtor}\par
13 \};\par
14 \par
15 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/noV.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/noV.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/noV.h}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "vertice.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NoV}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
noV.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/noV.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/noV.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef NOV_H}\par
2 {\cf21 #define NOV_H}\par
3 \par
4 {\cf21 #include "vertice.h"}\par
5 \par
6 {\cf17 class }NoV \{ {\cf20 // Classe que representa um n\'F3 de uma lista de v\'E9rtices}\par
7 {\cf17 public}:\par
8     Vertice* v;    {\cf20 // Ponteiro para o v\'E9rtice}\par
9     NoV* proximo;  {\cf20 // Pr\'F3ximo n\'F3 na lista}\par
10 \par
11     NoV(Vertice* vertice) : v(vertice), proximo(nullptr) \{\} {\cf20 // Construtor}\par
12 \};\par
13 \par
14 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/vertice.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/vertice.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/vertice.h}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "listaA.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Vertice}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
vertice.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/vertice.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/vertice.h}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef VERTICE_H}\par
2 {\cf21 #define VERTICE_H}\par
3 \par
4 {\cf21 #include "listaA.h"}\par
5 \par
6 {\cf17 class }Vertice \{\par
7 {\cf17 public}:\par
8     {\cf18 int} id;\par
9     {\cf18 int} peso;\par
10     {\cf18 bool} acessado;\par
11     ListaA arestas;\par
12 \par
13     Vertice({\cf18 int} {\cf18 id}, {\cf18 int} peso = 0)\par
14         : id(id), peso(peso), acessado(false), arestas() \{\}\par
15 \};\par
16 \par
17 {\cf21 #endif }{\cf20 // VERTICE_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/vertice_ponderado.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/vertice_ponderado.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/vertice_ponderado.cpp}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "vertice_ponderado.h"}\par
{\f2 #include "grafo_lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_ordem} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v get_ordem\:vertice_ponderado.cpp}
{\xe \v vertice_ponderado.cpp\:get_ordem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int get_ordem (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5 \{\par
6     {\cf19 return} grafo.vertice_ponderado();   {\cf20 // Retorna valor armazenado em GrafoLista}\par
7 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/implementations/vertice_ponderado.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/vertice_ponderado.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/vertice_ponderado.h}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "grafo_lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b vertice_ponderado} (const {\b GrafoLista} &grafo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v vertice_ponderado\:vertice_ponderado.h}
{\xe \v vertice_ponderado.h\:vertice_ponderado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int vertice_ponderado (const {\b GrafoLista} & grafo)}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
vertice_ponderado.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/implementations/vertice_ponderado.h}
{\xe \v CPP-Teoria-Dos-Grafos/src/implementations/vertice_ponderado.h}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef VERTICE_PONDERADO_H}\par
2 {\cf21 #define VERTICE_PONDERADO_H}\par
3 \par
4 {\cf21 #include <iostream>}\par
5 {\cf21 #include "grafo_lista.h"}\par
6 \par
7 {\cf18 int} vertice_ponderado({\cf17 const} GrafoLista& grafo);     {\cf20 // Retorna se os vertices tem peso}\par
8 \par
9 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/src/main.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/src/main.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/src/main.cpp}
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "./core/grafo.h"}\par
{\f2 #include "./implementations/eh_bipartido.h"}\par
{\f2 #include "./implementations/n_conexo.h"}\par
{\f2 #include "./implementations/get_grau.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7            \{\par
8     {\cf20 // Cria\'E7\'E3o de um grafo com 6 v\'E9rtices}\par
9     Grafo grafo(6);\par
10 \par
11     {\cf20 // Adicionando arestas ao grafo}\par
12     grafo.adicionarAresta(0, 1);\par
13     grafo.adicionarAresta(1, 2);\par
14     grafo.adicionarAresta(2, 3);\par
15     grafo.adicionarAresta(3, 4);\par
16     grafo.adicionarAresta(4, 5);\par
17 \par
18     {\cf20 // Exibindo a matriz de adjac\'EAncias}\par
19     std::cout << {\cf22 "Matriz de adjacencias do grafo:\\n"};\par
20     grafo.imprimirGrafo();\par
21 \par
22     {\cf20 // Testando se o grafo \'E9 bipartido}\par
23     GrafoBipartido grafoBipartido(6);\par
24     {\cf19 for} ({\cf18 int} i = 0; i < 6; ++i) \{\par
25         {\cf19 for} ({\cf18 int} j = 0; j < 6; ++j) \{\par
26             {\cf19 if} (grafo.getGrau(i) > 0) \{\par
27                 grafoBipartido.adicionarAresta(i, j);\par
28             \}\par
29         \}\par
30     \}\par
31     std::cout << {\cf22 "\\nO grafo eh bipartido? "} << (grafoBipartido.ehBipartido() ? {\cf22 "Sim"} : {\cf22 "Nao"}) << {\cf22 "\\n"};\par
32 \par
33     {\cf20 // Calculando o n\'FAmero de componentes conexas}\par
34     GrafoConexo grafoConexo(6);\par
35     {\cf19 for} ({\cf18 int} i = 0; i < 6; ++i) \{\par
36         {\cf19 for} ({\cf18 int} j = 0; j < 6; ++j) \{\par
37             {\cf19 if} (grafo.getGrau(i) > 0) \{\par
38                 grafoConexo.adicionarAresta(i, j);\par
39             \}\par
40         \}\par
41     \}\par
42     {\cf18 int} componentes = grafoConexo.nConexo();\par
43     std::cout << {\cf22 "\\nNumero de componentes conexas: "} << componentes << {\cf22 "\\n"};\par
44 \par
45     {\cf20 // Calculando o grau de cada v\'E9rtice}\par
46     GrafoGrau grafoGrau(6);\par
47     {\cf19 for} ({\cf18 int} i = 0; i < 6; ++i) \{\par
48         {\cf19 for} ({\cf18 int} j = 0; j < 6; ++j) \{\par
49             {\cf19 if} (grafo.getGrau(i) > 0) \{\par
50                 grafoGrau.adicionarAresta(i,j);\par
51             \}\par
52         \}\par
53     \}\par
54 \par
55     std::cout << {\cf22 "\\nGrau de cada vertice:\\n"};\par
56     {\cf19 for} ({\cf18 int} i = 0; i < 6; ++i) \{\par
57         std::cout << {\cf22 "Vertice "} << i << {\cf22 ": Grau = "} << grafoGrau.getGrau(i) << {\cf22 "\\n"};\par
58     \}\par
59 \par
60     {\cf19 return} 0; {\cf20 // Certifique-se de que a fun\'E7\'E3o main termina corretamente.}\par
61 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/tests/teste_eh_bipartido.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/teste_eh_bipartido.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/tests/teste_eh_bipartido.cpp}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "../src/implementations/eh_bipartido.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testeEhBipartido} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v testeEhBipartido\:teste_eh_bipartido.cpp}
{\xe \v teste_eh_bipartido.cpp\:testeEhBipartido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testeEhBipartido ()}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                         \{\par
5     GrafoBipartido grafo(4);\par
6 \par
7     {\cf20 // Adiciona arestas para um grafo bipartido}\par
8     grafo.adicionarAresta(0, 1);\par
9     grafo.adicionarAresta(1, 2);\par
10     grafo.adicionarAresta(2, 3);\par
11 \par
12     {\cf20 // Testa se o grafo \'E9 bipartido}\par
13     {\cf18 bool} resultado = grafo.ehBipartido();\par
14     std::cout << {\cf22 "Teste eh_bipartido: "} << (resultado ? {\cf22 "PASSOU"} : {\cf22 "FALHOU"}) << std::endl;\par
15 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/tests/teste_eh_bipartido.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/teste_eh_bipartido.h}
{\xe \v CPP-Teoria-Dos-Grafos/tests/teste_eh_bipartido.h}
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testeEhBipartido} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v testeEhBipartido\:teste_eh_bipartido.h}
{\xe \v teste_eh_bipartido.h\:testeEhBipartido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testeEhBipartido ()}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                         \{\par
5     GrafoBipartido grafo(4);\par
6 \par
7     {\cf20 // Adiciona arestas para um grafo bipartido}\par
8     grafo.adicionarAresta(0, 1);\par
9     grafo.adicionarAresta(1, 2);\par
10     grafo.adicionarAresta(2, 3);\par
11 \par
12     {\cf20 // Testa se o grafo \'E9 bipartido}\par
13     {\cf18 bool} resultado = grafo.ehBipartido();\par
14     std::cout << {\cf22 "Teste eh_bipartido: "} << (resultado ? {\cf22 "PASSOU"} : {\cf22 "FALHOU"}) << std::endl;\par
15 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
teste_eh_bipartido.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/teste_eh_bipartido.h}
{\xe \v CPP-Teoria-Dos-Grafos/tests/teste_eh_bipartido.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TESTE_EH_BIPARTIDO_H}\par
2 {\cf21 #define TESTE_EH_BIPARTIDO_H}\par
3 \par
4 {\cf18 void} testeEhBipartido();\par
5 \par
6 {\cf21 #endif }{\cf20 // TESTE_EH_BIPARTIDO_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/tests/teste_get_grau.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/teste_get_grau.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/tests/teste_get_grau.cpp}
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "../src/implementations/get_grau.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testeGetGrau} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v testeGetGrau\:teste_get_grau.cpp}
{\xe \v teste_get_grau.cpp\:testeGetGrau}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testeGetGrau ()}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                     \{\par
5     GrafoGrau grafo(4);\par
6 \par
7     {\cf20 // Adiciona arestas para teste}\par
8     grafo.adicionarAresta(0, 1);\par
9     grafo.adicionarAresta(1, 2);\par
10 \par
11     {\cf20 // Testa os graus}\par
12     std::cout << {\cf22 "Teste get_grau:"} << std::endl;\par
13     {\cf19 for} ({\cf18 int} i = 0; i < 4; ++i) \{\par
14         {\cf18 int} grau = grafo.getGrau(i);\par
15         std::cout << {\cf22 "Vertice "} << i << {\cf22 ": Grau = "} << grau << std::endl;\par
16     \}\par
17 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/tests/teste_get_grau.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/teste_get_grau.h}
{\xe \v CPP-Teoria-Dos-Grafos/tests/teste_get_grau.h}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testeGetGrau} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v testeGetGrau\:teste_get_grau.h}
{\xe \v teste_get_grau.h\:testeGetGrau}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testeGetGrau ()}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                     \{\par
5     GrafoGrau grafo(4);\par
6 \par
7     {\cf20 // Adiciona arestas para teste}\par
8     grafo.adicionarAresta(0, 1);\par
9     grafo.adicionarAresta(1, 2);\par
10 \par
11     {\cf20 // Testa os graus}\par
12     std::cout << {\cf22 "Teste get_grau:"} << std::endl;\par
13     {\cf19 for} ({\cf18 int} i = 0; i < 4; ++i) \{\par
14         {\cf18 int} grau = grafo.getGrau(i);\par
15         std::cout << {\cf22 "Vertice "} << i << {\cf22 ": Grau = "} << grau << std::endl;\par
16     \}\par
17 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
teste_get_grau.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/teste_get_grau.h}
{\xe \v CPP-Teoria-Dos-Grafos/tests/teste_get_grau.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TESTE_GET_GRAU_H}\par
2 {\cf21 #define TESTE_GET_GRAU_H}\par
3 \par
4 {\cf18 void} testeGetGrau();\par
5 \par
6 {\cf21 #endif }{\cf20 // TESTE_GET_GRAU_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/tests/teste_n_conexo.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/teste_n_conexo.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/tests/teste_n_conexo.cpp}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "../src/implementations/n_conexo.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testeNConexo} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v testeNConexo\:teste_n_conexo.cpp}
{\xe \v teste_n_conexo.cpp\:testeNConexo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testeNConexo ()}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                     \{\par
6     GrafoConexo grafo(6);\par
7 \par
8     {\cf20 // Adiciona arestas para criar 2 componentes conexas}\par
9     grafo.adicionarAresta(0, 1);\par
10     grafo.adicionarAresta(2, 3);\par
11 \par
12     {\cf20 // Testa o n\'FAmero de componentes conexas}\par
13     {\cf18 int} resultado = grafo.nConexo();\par
14     std::cout << {\cf22 "Teste n_conexo: Numero de componentes: "} << resultado << std::endl;\par
15     std::cout << {\cf22 "Resultado esperado: "} << (resultado == 4 ? {\cf22 "PASSOU"} : {\cf22 "FALHOU"}) << std::endl;\par
16 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/tests/teste_n_conexo.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/teste_n_conexo.h}
{\xe \v CPP-Teoria-Dos-Grafos/tests/teste_n_conexo.h}
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testeNConexo} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v testeNConexo\:teste_n_conexo.h}
{\xe \v teste_n_conexo.h\:testeNConexo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testeNConexo ()}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                     \{\par
6     GrafoConexo grafo(6);\par
7 \par
8     {\cf20 // Adiciona arestas para criar 2 componentes conexas}\par
9     grafo.adicionarAresta(0, 1);\par
10     grafo.adicionarAresta(2, 3);\par
11 \par
12     {\cf20 // Testa o n\'FAmero de componentes conexas}\par
13     {\cf18 int} resultado = grafo.nConexo();\par
14     std::cout << {\cf22 "Teste n_conexo: Numero de componentes: "} << resultado << std::endl;\par
15     std::cout << {\cf22 "Resultado esperado: "} << (resultado == 4 ? {\cf22 "PASSOU"} : {\cf22 "FALHOU"}) << std::endl;\par
16 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
teste_n_conexo.h\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/teste_n_conexo.h}
{\xe \v CPP-Teoria-Dos-Grafos/tests/teste_n_conexo.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
Ir para a documenta\'E7\'E3o deste ficheiro.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TESTE_N_CONEXO_H}\par
2 {\cf21 #define TESTE_N_CONEXO_H}\par
3 \par
4 {\cf18 void} testeNConexo();\par
5 \par
6 {\cf21 #endif }{\cf20 // TESTE_N_CONEXO_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/tests/teste_todos.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/teste_todos.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/tests/teste_todos.cpp}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "teste_eh_bipartido.h"}\par
{\f2 #include "teste_get_grau.h"}\par
{\f2 #include "teste_n_conexo.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:teste_todos.cpp}
{\xe \v teste_todos.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6            \{\par
7     std::cout << {\cf22 "===== Testando eh_bipartido ====="} << std::endl;\par
8     testeEhBipartido();\par
9 \par
10     std::cout << {\cf22 "\\n===== Testando get_grau ====="} << std::endl;\par
11     testeGetGrau();\par
12 \par
13     std::cout << {\cf22 "\\n===== Testando n_conexo ====="} << std::endl;\par
14     testeNConexo();\par
15 \par
16     {\cf19 return} 0;\par
17 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/tests/testeGrafoLista.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/testeGrafoLista.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/tests/testeGrafoLista.cpp}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "grafo_lista.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include "include/funcoes/eh_completo.h"}\par
{\f2 #include "include/funcoes/aresta_ponderada.h"}\par
{\f2 #include "include/funcoes/eh_arvore.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:testeGrafoLista.cpp}
{\xe \v testeGrafoLista.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9            \{  \par
10 \par
11     {\cf19 try} \{\par
12         GrafoLista grafo({\cf22 "teste.txt"});\par
13         cout << {\cf22 "Grafo carregado com sucesso!"} << endl;\par
14         grafo.imprimeGrafo();\par
15 \par
16         {\cf19 if} (ehCompleto(grafo) == {\cf17 true}) \{\par
17             std::cout << {\cf22 "O grafo \'E9 completo."} << std::endl;\par
18         \} {\cf19 else} \{\par
19             std::cout << {\cf22 "O grafo n\'E3o \'E9 completo."} << std::endl;\par
20         \}\par
21 \par
22         {\cf19 if}(arestasPonderadas(grafo) == {\cf17 true}) \{\par
23             std::cout << {\cf22 "As arestas s\'E3o ponderadas."} << std::endl;\par
24         \} {\cf19 else} \{\par
25             std::cout << {\cf22 "As arestas n\'E3o s\'E3o ponderadas."} << std::endl;\par
26         \}\par
27        {\cf19 if}(ehArvore(grafo) == {\cf17 true}) \{\par
28             std::cout << {\cf22 "O grafo \'E9 uma \'E1rvore."} << std::endl;\par
29         \} {\cf19 else} \{\par
30             std::cout << {\cf22 "O grafo n\'E3o \'E9 uma \'E1rvore."} << std::endl;\par
31         \}\par
32         {\cf19 if}(grafo.ehConexo() == {\cf17 true}) \{\par
33             std::cout << {\cf22 "O grafo \'E9 conexo."} << std::endl;\par
34         \} {\cf19 else} \{\par
35             std::cout << {\cf22 "O grafo n\'E3o \'E9 conexo."} << std::endl;\par
36         \}\par
37         {\cf19 if}(grafo.ehDirecionado() == {\cf17 true}) \{\par
38            \par
39            {\cf19 if}(grafo.temCiclo() == {\cf17 true}) \{\par
40             std::cout << {\cf22 "O grafo tem ciclo."} << std::endl;\par
41         \} {\cf19 else} \{ \par
42             std::cout << {\cf22 "O grafo n\'E3o tem ciclo."} << std::endl;\par
43         \}\par
44         \} {\cf19 else} \{\par
45             {\cf19 if}(grafo.temCicloNaoDirecionado() == {\cf17 true}) \{\par
46             std::cout << {\cf22 "O grafotem ciclo."} << std::endl;\par
47         \} {\cf19 else} \{ \par
48             std::cout << {\cf22 "O grafo n\'E3o tem ciclo."} << std::endl; \par
49         \}\par
50         \}\par
51     \} {\cf19 catch} (...) \{\par
52         std::cerr << {\cf22 "Erro inesperado!"} << std::endl;\par
53         {\cf19 return} EXIT_FAILURE;\par
54     \}\par
55 \par
56 \par
57 \par
58     {\cf19 return} 0;\par
59 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro CPP-Teoria-Dos-Grafos/tests/testeLista.cpp\par \pard\plain 
{\tc\tcl2 \v CPP-Teoria-Dos-Grafos/tests/testeLista.cpp}
{\xe \v CPP-Teoria-Dos-Grafos/tests/testeLista.cpp}
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "listaA.h"}\par
{\f2 #include "listaV.h"}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:testeLista.cpp}
{\xe \v testeLista.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7            \{\par
8     {\cf20 // Testando Lista de V\'E9rtices (ListaV)}\par
9     cout << {\cf22 "Testando Lista de V\'E9rtices:"} << endl;\par
10 \par
11     ListaV listaVertices;\par
12     listaVertices.inserirVertice({\cf17 new} Vertice(1, 10)); {\cf20 // V\'E9rtice 1 com peso 10}\par
13     listaVertices.inserirVertice({\cf17 new} Vertice(2, 20)); {\cf20 // V\'E9rtice 2 com peso 20}\par
14     listaVertices.inserirVertice({\cf17 new} Vertice(3, 30)); {\cf20 // V\'E9rtice 3 com peso 30}\par
15 \par
16     {\cf20 // Impress\'E3o manual dos v\'E9rtices}\par
17     NoV* noVertice = listaVertices.getRaiz();\par
18     {\cf19 while} (noVertice) \{\par
19         Vertice* vertice = noVertice->v;\par
20         cout << {\cf22 "V\'E9rtice ID: "} << vertice->id << {\cf22 ", Peso: "} << vertice->peso << endl;\par
21         noVertice = noVertice->proximo;\par
22     \}\par
23 \par
24     {\cf20 // Testando Lista de Arestas (ListaA)}\par
25     cout << {\cf22 "\\nTestando Lista de Arestas:"} << endl;\par
26 \par
27     ListaA listaArestas;\par
28     listaArestas.insereAresta(2, 5); {\cf20 // Aresta de destino 2 com peso 5}\par
29     listaArestas.insereAresta(3, 7); {\cf20 // Aresta de destino 3 com peso 7}\par
30     listaArestas.insereAresta(1, 10); {\cf20 // Aresta de destino 1 com peso 10}\par
31 \par
32     {\cf20 // Impress\'E3o manual das arestas}\par
33     NoA* noAresta = listaArestas.getRaiz();\par
34     {\cf19 while} (noAresta) \{\par
35         Aresta* aresta = noAresta->a;\par
36         cout << {\cf22 "Aresta Destino: "} << aresta->id << {\cf22 ", Peso: "} << aresta->peso << endl;\par
37         noAresta = noAresta->proximo;\par
38     \}\par
39 \par
40     {\cf19 return} 0;\par
41 \}\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par 
\pard\plain 
{\tc \v \'CDndice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
